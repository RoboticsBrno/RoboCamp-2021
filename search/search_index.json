{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Robotick\u00fd t\u00e1bor","text":""},{"location":"#vitej-na-strankach-robotickeho-tabora-2021","title":"V\u00edtej na str\u00e1nk\u00e1ch Robotick\u00e9ho t\u00e1bora 2021ElectronHrac\u00ed kostkaLogicRoboSvitP\u00e1jec\u00ed v\u00fdzvaBlackBox","text":""},{"location":"blackBox/","title":"O co jde?","text":"<p>BlackBox M3 je mechanick\u00e1 stavebnice a p\u0159edstavuje jednoduch\u00fd trezor. Skl\u00e1d\u00e1 se z \u0159ady Pot\u0159ebn\u00fd materi\u00e1l: p\u0159ekli\u017ekov\u00fdch d\u00edl\u016f, vyp\u00e1len\u00fdch na laseru, a n\u011bkolika d\u0159ev\u011bn\u00fdch kol\u00edk\u016f. </p> <p>Na ovl\u00e1dac\u00edch kole\u010dk\u00e1ch jsou vygrav\u00edrovan\u00e9 \u010d\u00edseln\u00edky, na kter\u00fdch se d\u00e1 p\u0159i v\u00fdrob\u011b nastavit po\u017eadovan\u00fd k\u00f3d. Cel\u00fd v\u00fdrobek pak m\u00e1 tvar krychle o stran\u011b 128 mm, co\u017e je n\u00e1sobek 16, a tak se d\u00e1 BlackBox jednodu\u0161e zkombinovat s d\u0159\u00edvky.</p> <p></p>"},{"location":"blackBox/manual/","title":"Manu\u00e1l","text":"<p> 1. P\u0159iprav\u00edme si d\u00edly za\u010d\u00ednaj\u00edc\u00ed p\u00edsmenem B, kter\u00e9 m\u016f\u017eete vid\u011bt na obr\u00e1zku</p> <p> 2. Slep\u00edme d\u00edly B0, B1 a B5 dle obr\u00e1zku. Slep\u00edme v\u0161echny sou\u010dasn\u011b, aby byla zachov\u00e1na kolmost</p> <p> 3. P\u0159ilep\u00edme d\u00edl B4</p> <p> 4. P\u0159ilep\u00edme d\u00edl B3</p> <p> 5. P\u0159ilep\u00edme d\u00edl B5 a m\u00e1me hotov\u00e9 t\u011blo trezoru</p> <p> 6. Nachyst\u00e1me si d\u00edly D0 a D1 a jako pom\u016fcku si p\u0159iprav\u00edme kousek dvou kol\u00edk\u016f o pr\u016fm\u011bru 10 mm a 7 mm. N\u00e1sledn\u011b slep\u00edme d\u00edly D0 a D1 a aby n\u00e1m na sebe d\u00edly sed\u011bly, vlo\u017e\u00edme do st\u0159edn\u00edho otvoru 10 mm kol\u00edk a do jednoho z krajn\u00edch 7 mm kol\u00edk. T\u00edm m\u00e1me zaji\u0161t\u011bno, \u017ee se n\u00e1m d\u00edly nepohnou a ji\u017e je jen sev\u0159eme svorkou.</p> <p> 7. Nachyst\u00e1me si dlouh\u00fd kol\u00edk (D6x33) a d\u00edly K0, K1, dva d\u00edly K2, \u010dty\u0159i d\u00edly K3 a t\u0159i d\u00edly K4.</p> <p> 8. Nalep\u00edme d\u00edly K0 a K1 na dlouh\u00fd kol\u00edk na sebe tak, aby konec kol\u00edku byl zarovnan\u00fd s plochou d\u00edlu D0. Po slepen\u00ed d\u016fkladn\u011b ot\u0159eme v\u0161echna m\u00edsta, kde vyteklo lepidlo, p\u0159edev\u0161\u00edm ve vnit\u0159n\u00edch roz\u00edch.</p> <p> 9. Nalep\u00edme d\u00edl D2 dle obr\u00e1zku a op\u011bt d\u016fkladn\u011b ot\u0159eme p\u0159ebytky lepidla</p> <p> 10. V\u00fdsledn\u00fd slepenec B z p\u0159edchoz\u00edho kroku nasuneme do slepence A (d\u00edly D0,D1). Zkontrolujeme, \u017ee se mohou v\u016f\u010di sob\u011b ot\u00e1\u010det, a pokud ne, lehce obrous\u00edme krou\u017eky K2 na slepenci B a st\u0159edn\u00ed otvor na slepenci A. Nic nelep\u00edme!</p> <p> 11. Nachyst\u00e1me si jeden kr\u00e1tk\u00fd kol\u00edk a d\u00edly S0, S1 a dva d\u00edly S1.</p> <p> 12. Nalep\u00edme d\u00edl S0 na kol\u00edk tak, aby byl konec kol\u00edku zarovnan\u00fd s d\u00edlem S0.</p> <p> 13.  Nalep\u00edme d\u00edl S1 a jak\u00e9koli p\u0159ebytky lepidla d\u016fkladn\u011b ot\u0159eme</p> <p> 14.  Nalep\u00edme druh\u00fd d\u00edl S1. Kroky 12 a\u017e 15 je\u0161t\u011b 3x zopakujeme, abychom m\u011bli tento d\u00edl 4x</p> <p> 15. Postupn\u011b vlo\u017e\u00edme v\u0161echny \u010dty\u0159i slepence C do slepence A, a vyzkou\u0161\u00edme, jestli se m\u016f\u017ee voln\u011b to\u010dit. Pokud ne, zkontrolujeme, jestli n\u011bkde nez\u016fstalo nadbyte\u010dn\u00e9 lepidlo, p\u0159\u00edpadn\u011b m\u016f\u017eeme sty\u010dn\u00e9 plochy lehce obrousit. Nic nelep\u00edme!</p> <p> 16. P\u0159iprav\u00edme si slepence A a B dle obr\u00e1zku. Nic nelep\u00edme!</p> <p> 17. Nasuneme jeden d\u00edl K3 na kol\u00edk dle obr\u00e1zku. Nic nelep\u00edme!</p> <p> 18. Postupn\u011b nalep\u00edme v\u0161echny d\u00edly K3 na kol\u00edk i na p\u0159edchoz\u00ed d\u00edl K3</p> <p> 19. Postupn\u011b nalep\u00edme v\u0161echny d\u00edly K3 na kol\u00edk i na p\u0159edchoz\u00ed d\u00edl K3</p> <p> 20. Postupn\u011b nalep\u00edme v\u0161echny d\u00edly K3 na kol\u00edk i na p\u0159edchoz\u00ed d\u00edl K3</p> <p> 21. Nato\u010d\u00edme si z\u00e1padku dle obr\u00e1zku. Nic nelep\u00edme!</p> <p> 22. Do jednoho z otvor\u016f vlo\u017e\u00edme jeden ze \u010dty\u0159 slepenc\u016f C. Nic nelep\u00edme!</p> <p> 23. Oto\u010d\u00edme z\u00e1padku zp\u011bt, aby n\u00e1m dr\u017eela slepenec C na m\u00edst\u011b. Slepenec C je t\u0159eba nato\u010dit tak aby se dalo oto\u010dit z\u00e1padkou. Nic nelep\u00edme!</p> <p> 24. Nasuneme krou\u017eek S2 na kol\u00edk slepence C dle obr\u00e1zku. Nic nelep\u00edme!</p> <p> 25. Nalep\u00edme krou\u017eek S3 na kol\u00edk i na p\u0159edchoz\u00ed krou\u017eek S2</p> <p> 26. Zopakujeme kroky 20 a\u017e 24 i pro ostatn\u00ed slepence C</p> <p> 27. Zopakujeme kroky 20 a\u017e 24 i pro ostatn\u00ed slepence C</p> <p> 28. Zopakujeme kroky 20 a\u017e 24 i pro ostatn\u00ed slepence C</p> <p> 29. Abychom mohli trezor otev\u0159\u00edt, mus\u00edme na n\u011bm zadat spr\u00e1vn\u00e9 heslo. Toto heslo si proto te\u010f zvol\u00edme pomoc\u00ed \u010dty\u0159 \u010d\u00edseln\u00edkov\u00fdch kole\u010dek S4. Abychom v\u011bd\u011bli, v jak\u00e9m po\u0159ad\u00ed jsou \u010d\u00edseln\u00edky za sebou, m\u00e1 ka\u017ed\u00fd z nich te\u010dku, kter\u00e1 po\u0159ad\u00ed prozrazuje. Zkontrolujeme si, \u017ee nem\u00e1me v\u00edc stejn\u00fdch \u010d\u00edseln\u00edku a \u017ee je m\u00e1me v\u0161echny. Pokud m\u00e1me v\u0161e a m\u00e1me zvolen\u00e9 heslo, m\u016f\u017eeme p\u0159istoupit k nalepen\u00ed \u010d\u00edseln\u00edku.</p> <p> 30. Postupn\u011b nalep\u00edme v\u0161echny t\u0159i d\u00edly K4 dle obr\u00e1zk\u016f</p> <p> 31. Postupn\u011b nalep\u00edme v\u0161echny t\u0159i d\u00edly K4 dle obr\u00e1zk\u016f</p> <p> 32. Nech\u00e1me v\u0161e zaschnout a m\u00e1me hotovo</p>"},{"location":"electron/","title":"O co jde?","text":"<p>Electron je stavebnice pro v\u00fduku z\u00e1kladn\u00edch znalost\u00ed elektroniky. Jednotliv\u00e9 elektronick\u00e9 sou\u010d\u00e1stky jsou um\u00edst\u011bny na samostatn\u00fdch desk\u00e1ch plo\u0161n\u00fdch spoj\u016f.</p> <p>Spojov\u00e1n\u00ed prob\u00edh\u00e1 pomoc\u00ed dr\u00e1t\u016f, kter\u00e9 se zasunou do p\u0159edchystan\u00fdch d\u011br a zajist\u00ed se gumov\u00fdmi \u0161punty. Alternativn\u011b jsou nachyst\u00e1ny pinheady pro p\u0159\u00edpadn\u00e9 pou\u017eit\u00ed \"\u010d\u00ednsk\u00fdch\" kabel\u016f s dutinkami.</p>"},{"location":"electron/#schematicke-znacky","title":"Sch\u00e9matick\u00e9 zna\u010dky","text":"N\u00e1zev Zna\u010dka Electron Zdroj Rezistor Kondenz\u00e1tor Kondenz\u00e1tor polarizovan\u00fd LED Tla\u010d\u00edtko P\u0159ep\u00edna\u010d Potenciometr Tranzistor NPN Tranzistor PNP"},{"location":"electron/#spravne-zapojovani-kabelu-k-soucastkam","title":"Spr\u00e1vn\u00e9 zapojov\u00e1n\u00ed kabel\u016f k sou\u010d\u00e1stk\u00e1m","text":""},{"location":"electron/electron-lesson-1/","title":"Electron lekce 1","text":""},{"location":"electron/electron-lesson-1/#1-tlacitko-rezistor-a-led","title":"1. Tla\u010d\u00edtko, rezistor a LED","text":"<p>Obvod obsahuje zdroj elektrick\u00e9ho nap\u011bt\u00ed, spot\u0159ebi\u010d \u2013 LED, rezistor, kter\u00fd omezuje proud proch\u00e1zej\u00edc\u00ed diodou, sp\u00ednac\u00ed tla\u010d\u00edtko a spojovac\u00ed vodi\u010de.  Spojte na panelu zd\u00ed\u0159ky dle sch\u00e9matu. </p> <p>Po zm\u00e1\u010dknut\u00ed tla\u010d\u00edtka se rozsv\u00edt\u00ed LED. Stiskem tla\u010d\u00edtka se spoj\u00ed jeho kontakty a uzav\u0159e se elektrick\u00fd obvod. Elektrick\u00fd proud te\u010de po dobu stisku tla\u010d\u00edtka od plus (+) p\u00f3lu baterie p\u0159es propojen\u00e9 sou\u010d\u00e1stky k minus (-) p\u00f3lu baterie. Ve sch\u00e9matu je dioda zapojena v propustn\u00e9m sm\u011bru neboli propou\u0161t\u00ed proud a ten ji rozsv\u011bcuje. Po uvoln\u011bn\u00ed tla\u010d\u00edtka se elektrick\u00fd obvod p\u0159eru\u0161\u00ed, proud p\u0159estane proch\u00e1zet a LED zhasne. </p> <p>Nyn\u00ed zkuste p\u0159ipojit LED obr\u00e1cen\u011b (proho\u010fte vz\u00e1jemn\u011b konce vodi\u010d\u016f upevn\u011bn\u00e9 ve zd\u00ed\u0159k\u00e1ch). Dioda je nyn\u00ed zapojena v z\u00e1v\u011brn\u00e9m sm\u011bru, nepropou\u0161t\u00ed proud, a tedy po zm\u00e1\u010dknut\u00ed tla\u010d\u00edtka nesv\u00edt\u00ed. </p> <p>Ov\u011b\u0159ili jste si tak z\u00e1kladn\u00ed vlastnost polovodi\u010dov\u00e9 diody \u2013 propou\u0161t\u00ed proud jen v jednom sm\u011bru. T\u00edmto jednoduch\u00fdm zapojen\u00edm si m\u016f\u017eete v\u017edy, kdy\u017e m\u00e1te pochybnosti, ov\u011b\u0159it, jestli jsou jednotliv\u00e9 diody v po\u0159\u00e1dku.</p> <p>M\u016f\u017eete rozsv\u00edtit \u010dervenou, \u017elutou nebo zelenou diodu. </p> <p>POZOR! Je nutn\u00e9, aby v obvodu s LED byl v\u017edy za\u0159azen omezovac\u00ed rezistor. Pokud byste p\u0159ipojili LED v propustn\u00e9m sm\u011bru p\u0159\u00edmo na zdroj nap\u011bt\u00ed \u2013 baterii, zcela jist\u011b byste LED zni\u010dili.</p> <p></p>"},{"location":"electron/electron-lesson-1/#merene-hodnoty","title":"M\u011b\u0159en\u00e9 hodnoty","text":"<p>Nap\u011bt\u00ed na diod\u011b je ni\u017e\u0161\u00ed ne\u017e na vstupu. Je to zp\u016fsobeno rezistorem, kter\u00fd sni\u017euje prot\u00e9kaj\u00edc\u00ed proud a nap\u011bt\u00ed. Nap\u011bt\u00ed na LED by m\u011blo b\u00fdt zhruba 2 V.  Proud proch\u00e1zej\u00edc\u00ed LED je p\u0159ibli\u017en\u011b 16 mA, co\u017e sta\u010d\u00ed na to, aby se LED rozsv\u00edtila. </p>"},{"location":"electron/electron-lesson-1/#2-seriove-zapojeni-rezistoru","title":"2. S\u00e9riov\u00e9 zapojen\u00ed rezistor\u016f","text":"<p>Vlastnosti s\u00e9riov\u00e9ho spojen\u00ed rezistor\u016f si m\u016f\u017eete ov\u011b\u0159it na modelu dle sch\u00e9matu. Po zapojen\u00ed se rozsv\u00edt\u00ed. Pokud je p\u0159ep\u00edna\u010d v poloze naho\u0159e, proud mus\u00ed proch\u00e1zet ob\u011bma rezistory, z nich\u017e ka\u017ed\u00fd sv\u00fdm d\u00edlem zmen\u0161uje celkov\u00fd proud v obvodu a LED sv\u00edt\u00ed slab\u011bji. Pokud p\u0159epnete p\u0159ep\u00edna\u010d do spodn\u00ed polohy, proudu se do cesty nestav\u00ed rezistor 560 \u2126 a prot\u00e9k\u00e1 tak pouze rezistorem 180\u2126. Souhrnn\u00fd odpor je tak men\u0161\u00ed, a proto je proud v\u011bt\u0161\u00ed, a LED sv\u00edt\u00ed siln\u011bji. V tomto sch\u00e9matu jsou za\u0159azeny v s\u00e9rii dva rezistory, ale je mo\u017eno takhle za sebou propojit rezistor\u016f v\u00edce. V\u00fdsledn\u00fd odpor R s\u00e9riov\u00e9 kombinace rezistor\u016f se rovn\u00e1 sou\u010dtu hodnot jednotliv\u00fdch rezistor\u016f, v na\u0161em p\u0159\u00edpad\u011b R = R3 + R2 = 560 + 180 = 740 \u2126</p> <p></p>"},{"location":"electron/electron-lesson-1/#merene-hodnoty_1","title":"M\u011b\u0159en\u00e9 hodnoty","text":"<p>Nap\u011bt\u00ed na LED, p\u0159i pozici p\u0159ep\u00edna\u010de v poloze dole, by m\u011blo b\u00fdt zhruba 2 V, v poloze naho\u0159e je to o n\u011bco m\u00e9n\u011b 1,9 V. </p> <p>Proud proch\u00e1zej\u00edc\u00ed LED p\u0159i pozici p\u0159ep\u00edna\u010de v poloze dole, je stejn\u00fd jako v prvn\u00edm p\u0159\u00edklad\u011b, tedy 16 mA, v poloze naho\u0159e je to o dost m\u00e9n\u011b skoro 4,3 mA, co\u017e st\u00e1le sta\u010d\u00ed na to, aby se LED rozsv\u00edtila.</p>"},{"location":"electron/electron-lesson-1/#3-paralelni-zapojeni-rezistoru","title":"3. Paraleln\u00ed zapojen\u00ed rezistor\u016f","text":"<p>Na tomto zapojen\u00ed si m\u016f\u017eete vyzkou\u0161et, jak\u00e9 vlastnosti bude m\u00edt zapojen\u00ed rezistor\u016f paraleln\u011b (soub\u011b\u017en\u011b) neboli vedle sebe. Zapojte obvod podle sch\u00e9matu. Rozsv\u00edt\u00ed se LED a po stisku tla\u010d\u00edtka se rozsv\u00edt\u00ed siln\u011bji. Vysv\u011btlen\u00ed je n\u00e1sleduj\u00edc\u00ed: pokud je tla\u010d\u00edtko rozepnuto, proud proch\u00e1z\u00ed p\u0159es rezistor a rozsv\u011bcuje LED pon\u011bkud slab\u011bji. Po stisknut\u00ed tla\u010d\u00edtka za\u010dne proud proch\u00e1zet ob\u011bma rezistory sou\u010dasn\u011b a je proto v\u011bt\u0161\u00ed. To se projev\u00ed zv\u011bt\u0161en\u00edm jasu LED.</p> <p>Pro snadn\u011bj\u0161\u00ed pochopen\u00ed principu si p\u0159edstavte situaci, kdy jedn\u011bmi dve\u0159mi proud\u00ed do kina z\u00e1stup lid\u00ed. V okam\u017eiku, kdy se otev\u0159ou druh\u00e9 dve\u0159e, za\u010dnou vch\u00e1zet lid\u00e9 i t\u011bmito dve\u0159mi a kino se za\u010dne plnit rychleji.</p> <p>Vra\u0165me se k na\u0161emu sch\u00e9matu. V s\u00e9riov\u00e9m zapojen\u00ed podle n\u00e1vodu \u010d.2 byl v\u00fdsledn\u00fd odpor v\u011bt\u0161\u00ed ne\u017e odpor kter\u00e9hokoli pou\u017eit\u00e9ho rezistoru. Paraleln\u011b m\u016f\u017eeme spojit dva i v\u00edce rezistor\u016f. V\u00fdsledn\u00fd odpor je v\u017edy men\u0161\u00ed ne\u017e hodnota nejmen\u0161\u00edho z rezistor\u016f zapojen\u00fdch paraleln\u011b. P\u0159esn\u011b se v\u00fdsledn\u00fd odpor R v na\u0161em sch\u00e9matu vypo\u010dte podle vztahu:</p> <p></p> <p></p>"},{"location":"electron/electron-lesson-2/","title":"Electron lekce 2","text":""},{"location":"electron/electron-lesson-2/#4-and","title":"4. AND","text":"<p>Pomoc\u00ed tohoto obvodu pochop\u00edte princip s\u00e9riov\u00e9ho zapojen\u00ed sp\u00edna\u010d\u016f, obvod je z\u00e1rove\u0148 modelem tzv. logick\u00e9 funkce \"AND\" (\u010desky \"a z\u00e1rove\u0148\"). Po propojen\u00ed dle sch\u00e9matu p\u0159epn\u011bte p\u0159ep\u00edna\u010d nahoru do polohy \"zapnuto\" a zm\u00e1\u010dkn\u011bte tla\u010d\u00edtko \u2013 rozsv\u00edt\u00ed se LED. Po uvoln\u011bn\u00ed tla\u010d\u00edtka LED zhasne. Pokud p\u0159epnete p\u0159ep\u00edna\u010d dol\u016f do polohy \"vypnuto\", po zm\u00e1\u010dknut\u00ed tla\u010d\u00edtka se LED nerozsv\u00edt\u00ed. Vypl\u00fdv\u00e1 z toho, \u017ee LED se p\u0159i s\u00e9riov\u00e9m zapojen\u00ed sp\u00edna\u010de a tla\u010d\u00edtka rozsv\u00edt\u00ed jen tehdy, kdy\u017e jsou z\u00e1rove\u0148 sepnuty sp\u00edna\u010d i tla\u010d\u00edtko. Logick\u00e1 funkce obecn\u011b vyjad\u0159uje vztah mezi vstupn\u00edmi veli\u010dinami, v na\u0161em p\u0159\u00edpad\u011b stavy sp\u00edna\u010de a tla\u010d\u00edtka (zapnuto nebo vypnuto) a v\u00fdstupn\u00ed veli\u010dinou, v tomto zapojen\u00ed je to jas LED. Logick\u00e1 funkce se zapisuje do tabulky. V na\u0161em zapojen\u00ed p\u0159i\u0159ad\u00edme stav\u016fm, kdy jsou tla\u010d\u00edtko nebo sp\u00edna\u010d sepnuty, logickou jedni\u010dku ( 1 ) \u2013 zapnuto, vypnut\u00e9mu tla\u010d\u00edtku nebo sp\u00edna\u010di logickou nulu ( 0 ) - vypnuto. Pokud LED sv\u00edt\u00ed, budeme br\u00e1t, \u017ee v\u00fdstupn\u00ed hodnota je logick\u00e1 1, pokud nesv\u00edt\u00ed, je hodnota v\u00fdstupn\u00ed veli\u010diny logick\u00e1 0. </p> <p>Ve sv\u00e9m okol\u00ed byste na\u0161li p\u0159ekvapiv\u00e9 mno\u017estv\u00ed aplikaci t\u00e9to i jin\u00fdch logick\u00fdch funkci. Tak nap\u0159\u00edklad, pokud si chcete koupit n\u011bjakou v\u011bc, mus\u00ed b\u00fdt v obchod\u011b a z\u00e1rove\u0148 mus\u00edte m\u00edt na ni pen\u00edze. Cel\u00fd fascinuj\u00edc\u00ed sv\u011bt po\u010d\u00edta\u010d\u016f je zalo\u017een na logick\u00fdch nul\u00e1ch a jedni\u010dk\u00e1ch a na neskute\u010dn\u011b rychl\u00e9m prov\u00e1d\u011bn\u00ed logick\u00fdch operaci podle p\u0159edem sestaven\u00fdch program\u016f.</p>"},{"location":"electron/electron-lesson-2/#tabulka-logickych-hodnot-funkce-and","title":"Tabulka logick\u00fdch hodnot funkce AND:","text":"Tla\u010d\u00edtko Sp\u00edna\u010d LED 0 0 0 0 1 0 1 0 0 1 1 1"},{"location":"electron/electron-lesson-2/#5-or","title":"5. OR","text":"<p>Paraleln\u00ed neboli soub\u011b\u017en\u00e9 zapojen\u00ed sp\u00edna\u010de a tla\u010d\u00edtka m\u00e1 tu vlastnost, \u017ee LED lze zapnout nez\u00e1visle bud tla\u010d\u00edtkem nebo sp\u00edna\u010dem. Na rozd\u00edl od zapojen\u00ed \u010d.4, kde proud mohl prot\u00e9kat pouze jednou cestou, a to jen pokud byly sp\u00edna\u010d i tla\u010d\u00edtko sepnuty, v tomto zapojen\u00ed m\u016f\u017ee t\u00e9ci proud bu\u010f sepnut\u00fdm tla\u010d\u00edtkem nebo sepnut\u00fdm sp\u00edna\u010dem anebo ob\u011bma najednou. Tyto vlastnosti odpov\u00eddaj\u00ed logick\u00e9 funkci \"OR\" (\u010desky \"nebo\"). Pokud op\u011bt ozna\u010d\u00edme stavy tla\u010d\u00edtka, sp\u00edna\u010de a LED logick\u00fdmi hodnotami, z\u00edsk\u00e1me pro funkci \"OR\" tabulku n\u00ed\u017ee.</p> <p>Jako p\u0159\u00edklad situace vyjad\u0159uj\u00edc\u00ed tuto logickou funkci lze nap\u0159\u00edklad uv\u00e9st: p\u016fjdete-li kupovat pe\u010divo, m\u016f\u017eete koupit bud rohl\u00edk nebo housku anebo tak\u00e9 oboj\u00ed.</p>"},{"location":"electron/electron-lesson-2/#tabulka-logickych-hodnot-funkce-or","title":"Tabulka logick\u00fdch hodnot funkce OR:","text":"Tla\u010d\u00edtko Sp\u00edna\u010d LED 0 0 0 0 1 1 1 0 1 1 1 1"},{"location":"electron/electron-lesson-2/#ukol-navic","title":"\u00dakol nav\u00edc","text":""},{"location":"electron/electron-lesson-2/#xor","title":"XOR","text":"<p>Vy\u0159e\u0161te za pou\u017eit\u00ed dvou sad Electronu (ve dvojici). K zapojen\u00ed si tak\u00e9 nakreslete schema. </p> Vstup 0 Vstup 1 LED 0 0 0 0 1 1 1 0 1 1 1 0"},{"location":"electron/electron-lesson-2/#6-prepinani-barev","title":"6. P\u0159ep\u00edn\u00e1n\u00ed barev","text":"<p>Po sestaven\u00ed se rozsv\u00edt\u00ed \u010derven\u00e1 nebo \u017elut\u00e1 LED podle toho, v jak\u00e9 poloze se zrovna nach\u00e1z\u00ed p\u0159ep\u00edna\u010d. P\u0159ep\u00edna\u010dem m\u016f\u017eete tedy st\u0159\u00eddat svit \u010derven\u00e9 a \u017elut\u00e9 LED.</p> <p>Obvod obsahuje, krom\u011b zdroje nap\u011bt\u00ed, omezovac\u00ed rezistor 180\u2126, kter\u00fd chr\u00e1n\u00ed LED p\u0159ed proudov\u00fdm p\u0159et\u00ed\u017een\u00edm a p\u0159ep\u00edna\u010d, kter\u00fd pou\u0161t\u00ed, v z\u00e1vislosti na sv\u00e9 poloze, proud do jedn\u00e9 nebo druh\u00e9 LED.</p> <p></p>"},{"location":"electron/electron-lesson-2/#7-potenciometr-jako-promenny-rezistor","title":"7. Potenciometr jako prom\u011bnn\u00fd rezistor","text":"<p>Zapojte obvod podle sch\u00e9matu. Rozsv\u00edt\u00ed se LED siln\u011b nebo slab\u011bji podle toho, v jak\u00e9 poloze je regula\u010dn\u00ed knofl\u00edk potenciometru. Ot\u00e1\u010den\u00edm regula\u010dn\u00edho knofl\u00edku lze plynule m\u011bnit jas LED. Pro pochopen\u00ed funkce potenciometru je dobr\u00e9 v\u011bd\u011bt, jak je mechanicky konstruov\u00e1n. Pohled na potenciometr bez regula\u010dn\u00edho knofl\u00edku je na obr 9.2. Odporov\u00e1 dr\u00e1ha podkovovit\u00e9ho tvaru je tvo\u0159ena vrstvi\u010dkou odporov\u00e9ho laku, na jej\u00ed konce jsou vodiv\u011b p\u0159ipojeny kovov\u00e9 v\u00fdvody. Mezi t\u011bmito v\u00fdvody je st\u00e1l\u00fd odpor dan\u00fd vlastnostmi odporov\u00e9 dr\u00e1hy, ve stavebnici je potenciometr 10 k\u2126. Znamen\u00e1 to, \u017ee jeho odporov\u00e1 dr\u00e1ha m\u00e1 odpor 10 k\u2126. A\u017e potud by byly elektrick\u00e9 vlastnosti shodn\u00e9 s pevn\u00fdm rezistorem. Potenciometr m\u00e1 v\u0161ak nav\u00edc tzv. jezdce \u2013 pl\u00ed\u0161ek, kter\u00fd se dot\u00fdk\u00e1 odporov\u00e9 dr\u00e1hy v jednom m\u00edst\u011b a toto m\u00edsto dotyku se d\u00e1 ot\u00e1\u010den\u00edm knofl\u00edku m\u011bnit. Vypl\u00fdv\u00e1 z toho, \u017ee odpor mezi jezdcem a n\u011bkter\u00fdm z konc\u016f odporov\u00e9 dr\u00e1hy je z\u00e1visl\u00fd na poloze jezdce a \u017ee sou\u010det odpor\u016f mezi jezdcem a ob\u011bma konci dr\u00e1hy je v\u017edy roven celkov\u00e9mu odporu odporov\u00e9 dr\u00e1hy. Pokud je jezdec oto\u010den zcela k jednomu konci dr\u00e1hy, je odpor mezi jezdcem a t\u00edmto koncem dr\u00e1hy t\u00e9m\u011b\u0159 nulov\u00fd, mezi jezdcem a druh\u00fdm koncem dr\u00e1hy t\u00e9m\u011b\u0159 roven celkov\u00e9mu odporu odporov\u00e9 dr\u00e1hy. </p> <p></p> <p>Tyto vlastnosti si m\u016f\u017eete ov\u011b\u0159it, pokud budete m\u011bnit polohu regula\u010dn\u00edho knofl\u00edku a p\u0159ep\u00ednat p\u0159ep\u00edna\u010d. Pokud bude jezdec uprost\u0159ed, bude sv\u00edtit LED p\u0159i obou poloh\u00e1ch p\u0159ep\u00edna\u010de stejn\u011b (slab\u011b). Pokud pooto\u010d\u00edte regula\u010dn\u00ed knofl\u00edk mimo st\u0159ed, bude p\u0159i p\u0159ep\u00edn\u00e1n\u00ed p\u0159ep\u00edna\u010de m\u011bnit LED skokem sv\u016fj jas podle toho, jak\u00fd odpor je pr\u00e1v\u011b mezi jezdcem a koncem odporov\u00e9 dr\u00e1hy. Op\u011bt plat\u00ed, \u017ee \u010d\u00edm men\u0161\u00ed je odpor obvodu, t\u00edm v\u011bt\u0161\u00ed je proud a tak\u00e9 jas LED.</p> <p></p>"},{"location":"electron/electron-lesson-2/#8-prolinani-barev","title":"8. Prol\u00edn\u00e1n\u00ed barev","text":"<p>Zapojte obvod dle sch\u00e9matu, rozsv\u00edt\u00ed se v\u00e1m jedna nebo ob\u011b LED podle toho, v jak\u00e9 poloze se nach\u00e1z\u00ed zrovna jezdec potenciometru. Pokud je jezdec bl\u00ed\u017ee ke krajn\u00ed poloze \"-\", sv\u00edt\u00ed jasn\u011bji \u017elut\u00e1 LED, pokud je bl\u00ed\u017ee poloze \"+\", sv\u00edt\u00ed jasn\u011bji \u010derven\u00e1 LED. Ot\u00e1\u010den\u00edm knofl\u00edku m\u016f\u017eete m\u011bnit jas obou LED tak, \u017ee to vypad\u00e1, jako by se sv\u011btlo \"p\u0159el\u00e9valo\" z jedn\u00e9 do druh\u00e9.</p> <p></p>"},{"location":"electron/electron-lesson-2/#9-kondenzator-neboli-zasobarna-energie","title":"9. Kondenz\u00e1tor neboli z\u00e1sob\u00e1rna energie","text":"<p>Zapojte obvod dle sch\u00e9matu, p\u0159i zapojov\u00e1n\u00ed m\u011bjte p\u0159ep\u00edna\u010d ve spodn\u00ed poloze. Nyn\u00ed p\u0159epn\u011bte p\u0159ep\u00edna\u010d nahoru a \u010derven\u00e1 LED blikne. P\u0159epn\u011bte dol\u016f a blikne \u017elut\u00e1 LED. Co se v obvodu odehr\u00e1lo? Kondenz\u00e1tor je elektronick\u00e1 sou\u010d\u00e1stka, kter\u00e1 je schopna uchovat elektrick\u00fd n\u00e1boj. Znamen\u00e1 to, \u017ee pokud ke kondenz\u00e1toru p\u0159ipoj\u00edme zdroj nap\u011bt\u00ed (v na\u0161em p\u0159\u00edpad\u011b baterii), kondenz\u00e1tor se nabije a podr\u017e\u00ed si nap\u011bt\u00ed i po odpojen\u00ed zdroje. Kdy\u017e nyn\u00ed p\u0159ipoj\u00edme ke kondenz\u00e1toru elektrick\u00fd spot\u0159ebi\u010d (v na\u0161em p\u0159\u00edpad\u011b LED), bude se kondenz\u00e1tor s\u00e1m po ur\u010ditou dobu chovat jako zdroj nap\u011bt\u00ed a LED sv\u00edt\u00ed, ne\u017e se kondenz\u00e1tor vybije. P\u0159i nab\u00edjen\u00ed te\u010de kondenz\u00e1torem proud po dobu, ne\u017e se nap\u011bt\u00ed kondenz\u00e1toru vyrovn\u00e1 s nap\u011bt\u00edm zdroje \u2013 to n\u00e1m signalizuje v na\u0161em modelu \u010derven\u00e1 LED. P\u0159i vyb\u00edjen\u00ed se rozsv\u00edt\u00ed \u017elut\u00e1 LED. Doba nab\u00edjen\u00ed a vyb\u00edjen\u00ed kondenz\u00e1toru z\u00e1vis\u00ed na jeho kapacit\u011b (\u010d\u00edm v\u011bt\u0161\u00ed kapacita, t\u00edm je doba del\u0161\u00ed) a velikosti elektrick\u00e9ho proudu, kter\u00fdm se kondenz\u00e1tor nabij\u00ed nebo vyb\u00edj\u00ed (\u010d\u00edm men\u0161\u00ed je proud, t\u00edm d\u00e9le prob\u00edh\u00e1 nab\u00edjen\u00ed nebo vyb\u00edjen\u00ed). V na\u0161em obvodu je proud omezen pouze rezistorem 180 \u2126, tak\u017ee nab\u00edjen\u00ed a vyb\u00edjen\u00ed prob\u00edh\u00e1 rychle a LED sv\u00edt\u00ed jen kr\u00e1tce. Kdybychom cht\u011bli d\u00e9lku svitu prodlou\u017eit, museli bychom kondenz\u00e1tor nab\u00edjet p\u0159es v\u011bt\u0161\u00ed rezistor, proud by byl ov\u0161em mal\u00fd na to, aby rozsv\u00edtil LED pln\u00fdm jasem. Tento probl\u00e9m je snadno \u0159e\u0161iteln\u00fd pou\u017eit\u00edm tranzistoru, co\u017e si budete moci vyzkou\u0161et v dal\u0161\u00edch zapojen\u00edch. Jednotka kapacity kondenz\u00e1toru je 1 F (Farad), v praxi se ov\u0161em pou\u017e\u00edvaj\u00ed kondenz\u00e1tory s kapacitou mnohon\u00e1sobn\u011b men\u0161\u00ed, ne\u017e 1 F, tomu odpov\u00eddaj\u00ed i b\u011b\u017en\u011b pou\u017e\u00edvan\u00e9 jednotky:</p> <p>1 \u00b5F (\u010dti mikrofarad)  =   1 miliontina faradu  1 nF (\u010dti nanofarad)   =   1 tis\u00edcina mikrofaradu  1 pF (\u010dti pikofarad)    =   1 tis\u00edcina nanofaradu   </p> <p>Ve sch\u00e9matech se u\u017e v\u011bt\u0161inou nep\u00ed\u0161e p\u00edsmeno \"F\"- zna\u010dka Faradu za hodnotu kondenz\u00e1toru, proto\u017ee je z\u0159ejm\u00e9 ze sch\u00e9matick\u00e9 zna\u010dky, \u017ee jde o kondenz\u00e1tor a hodnota je ve Faradech.</p> <p>P\u0159i experimentov\u00e1n\u00ed a zapojov\u00e1n\u00ed elektrolytick\u00fdch kondenz\u00e1tor\u016f do obvodu je nutno db\u00e1t, aby v\u00fdvod \"+\" byl p\u0159ipojen na vy\u0161\u0161\u00ed nap\u011bt\u00ed, ne\u017e v\u00fdvod \"-\". P\u0159i dlouhodob\u011bj\u0161\u00edm opa\u010dn\u00e9m p\u0159ipojen\u00ed by mohlo doj\u00edt k po\u0161kozen\u00ed kondenz\u00e1toru.</p> <p></p>"},{"location":"electron/electron-lesson-3/","title":"Electron lekce 3","text":""},{"location":"electron/electron-lesson-3/#10-experiment-s-tranzistorem","title":"10. Experiment s tranzistorem","text":"<p>Tranzistor je polovodi\u010dov\u00e1 sou\u010d\u00e1stka se t\u0159emi v\u00fdvody, kter\u00e9 se naz\u00fdvaj\u00ed b\u00e1ze, ve sch\u00e9matu ozna\u010den\u00e1 jako(B), kolektor (C) a emitor (E).</p> <p>Nej\u010dast\u011bji se tranzistor pou\u017e\u00edv\u00e1 jako zesilova\u010d elektrick\u00e9ho proudu, jinak \u0159e\u010deno, prost\u0159ednictv\u00edm tranzistoru m\u016f\u017eeme mal\u00fdmi zm\u011bnami proudu I tekouc\u00edho do b\u00e1ze tranzistoru vyvol\u00e1vat velk\u00e9 zm\u011bny proudu Ic tekouc\u00edho do kolektoru tranzistoru. Zjednodu\u0161en\u011b lze tak\u00e9 \u0159\u00edct, \u017ee tranzistor p\u0159edstavuje mezi kolektorem a emitorem odpor, jeho\u017e hodnotu lze m\u011bnit elektronicky (nikoli mechanicky, jako u potenciometru) velikost\u00ed proudu I, kter\u00fd te\u010de do b\u00e1ze. B\u011b\u017en\u00e9 tranzistory zesiluj\u00ed v\u00edce ne\u017e 100 kr\u00e1t, tak\u017ee k sepnut\u00ed proudu Ic = 100 mA sta\u010d\u00ed, aby do b\u00e1ze tekl proud 1 mA. Proud v na\u0161em modelu te\u010de podle sch\u00e9matu od plus p\u00f3lu zdroje (baterie) a d\u011bl\u00ed se na proud tekouc\u00ed do b\u00e1ze p\u0159es odpor R a proud tekouc\u00ed do kolektoru p\u0159es LED a ochrann\u00fd odpor R- Mezi b\u00e1z\u00ed \u2013 emitorem se chov\u00e1 tranzistor jako dioda v propustn\u00e9m sm\u011bru, zjednodu\u0161en\u011b m\u016f\u017eeme \u0159\u00edci, \u017ee m\u00e1 zanedbateln\u00fd odpor. Proud b\u00e1ze je tedy ur\u010den velikosti odporu p\u0159ipojen\u00e9ho k b\u00e1zi (\u010c\u00edm v\u011bt\u0161\u00ed odpor, t\u00edm men\u0161\u00ed proud).</p> <p>Zapojte si nyn\u00ed obvod podle obr\u00e1zku na lev\u00e9 stran\u011b, zjist\u00edte, \u017ee \u017elut\u00e1 LED sotva znateln\u011b sv\u00edt\u00ed. Proud, kter\u00fd te\u010de LED p\u0159es odpor 100 k\u2126 je p\u0159\u00edli\u0161 mal\u00fd. V zapojen\u00ed napravo sta\u010d\u00ed tento mal\u00fd proud, prot\u00e9kaj\u00edc\u00ed p\u0159es stejn\u00fd odpor 100 k\u2126 do b\u00e1ze, k sepnut\u00ed tranzistoru, neboli ke zmen\u0161en\u00ed jeho odporu mezi kolektorem a emitorem natolik, \u017ee se LED rozsv\u00edt\u00ed. Zkuste nyn\u00ed odpojit dr\u00e1t ze zd\u00ed\u0159ky b\u00e1ze tranzistoru. LED zhasne, nebo\u0165 jste odpojili proud do b\u00e1ze a tranzistor se rozepnul. Chytn\u011bte nyn\u00ed odpojen\u00fd vodi\u010d prsty za odizolovan\u00fd konec a druhou rukou se dotkn\u011bte zd\u00ed\u0159ky b\u00e1ze tranzistoru, LED se rozsv\u00edt\u00ed, pokud ne, m\u00edrn\u011b si navlh\u010dete prsty a znovu se dotkn\u011bte. T\u011blo toti\u017e p\u0159edstavuje rovn\u011b\u017e elektrick\u00fd odpor, kter\u00fdm projde proud posta\u010duj\u00edc\u00ed k sepnut\u00ed tranzistoru v na\u0161em zapojen\u00ed.</p> <p>Pokud budete s tranzistorem experimentovat, dbejte, aby do b\u00e1ze tekl proud v\u017edy p\u0159es odpor. Stejn\u011b jako u LED byste velk\u00fdm proudem p\u0159\u00edmo z baterie tranzistor zni\u010dili.</p> <p></p>"},{"location":"electron/electron-lesson-3/#11-jednoduchy-tranzistorovy-zesilovac","title":"11. Jednoduch\u00fd tranzistorov\u00fd zesilova\u010d","text":"<p>V mnoha p\u0159\u00edpadech, kdy je vstupn\u00ed sign\u00e1l, kter\u00fd m\u00e1me k dispozici, p\u0159\u00edli\u0161 mal\u00fd na to, aby sepnul tranzistor, je nutno propojit n\u011bkolik tranzistor\u016f za sebou, aby se celkov\u00e9 zes\u00edlen\u00ed obvodu zv\u00fd\u0161ilo. Jednoduch\u00fd zesilova\u010d- tzv. Darlingtonovo zapojen\u00ed je na sch\u00e9matu. Po zapojen\u00ed se dotkn\u011bte zd\u00ed\u0159ky b\u00e1ze T a p\u0159ibli\u017ete se k n\u011bjak\u00e9mu (i vypnut\u00e9mu) elektrick\u00e9mu spot\u0159ebi\u010di nebo kabelu. LED se rozsv\u00edt\u00ed, p\u0159esto\u017ee do b\u00e1ze T zd\u00e1nliv\u011b nete\u010de \u017e\u00e1dn\u00fd proud. Va\u0161e t\u011blo nyn\u00ed p\u016fsob\u00ed jako ant\u00e9na pro okoln\u00ed elektromagnetick\u00e9 pole a dotekem prstu p\u0159ivedete do b\u00e1ze T proud velikosti deseti-tis\u00edcin mA, kter\u00fd ov\u0161em sta\u010d\u00ed k pootev\u0159en\u00ed tranzistoru T. Zes\u00edlen\u00fd proud vych\u00e1zej\u00edc\u00ed z emitoru T a vstupuj\u00edc\u00ed do b\u00e1ze T sta\u010d\u00ed k sepnut\u00ed tranzistoru T a rozsv\u00edcen\u00ed \u010derven\u00e9 LED. P\u0159esto\u017ee se zd\u00e1, \u017ee p\u0159i doteku LED sv\u00edt\u00ed trval\u00fdm jasem, vlastn\u011b blik\u00e1, a to v rytmu zm\u011bn okoln\u00edho elektromagnetick\u00e9 pole, kter\u00e9 m\u011bn\u00ed svoji intenzitu stejn\u011b jako nap\u011bt\u00ed a proud v elektrick\u00e9 s\u00edti 50 kr\u00e1t za sekundu. Zm\u011bny jsou ov\u0161em na lidsk\u00e9 oko p\u0159\u00edli\u0161 rychl\u00e9, a proto vn\u00edm\u00e1me jas LED jako st\u00e1l\u00fd. Pokud chcete toto blik\u00e1n\u00ed vid\u011bt, pohybujte panelem zlehka k\u00fdvav\u011b do stran od kabelu a sledujte LED.</p> <p></p>"},{"location":"electron/electron-lesson-3/#12-tranzistorovy-oscilator","title":"12. Tranzistorov\u00fd oscil\u00e1tor","text":"<p>Zapojte obvod podle sch\u00e9matu. Obvod je u\u017e pon\u011bkud slo\u017eit\u011bj\u0161\u00ed, proto prove\u010fte d\u00edl\u010d\u00ed kontrolu po zapojen\u00ed \u010d\u00e1sti oscil\u00e1toru, abyste sn\u00ed\u017eili riziko chyby v celkov\u00e9m zapojen\u00ed a kontrolu po zapojen\u00ed cel\u00e9ho obvodu. Pokud jste si jisti, m\u016f\u017eete p\u0159ipojit baterii. Stiskn\u011bte tla\u010d\u00edtko a za\u010dnou blikat LED.</p> <p>Co se v tomto za\u0159\u00edzen\u00ed odehr\u00e1v\u00e1? Po stisku tla\u010d\u00edtka se p\u0159ivede nap\u00e1jen\u00ed k obvodu, jeho\u017e sou\u010d\u00e1stky a zp\u016fsob zapojen\u00ed je zvolen tak, aby v n\u011bm do\u0161lo ke kmit\u016fm, neboli aby se samo\u010dinn\u011b st\u0159\u00eddav\u011b sp\u00ednaly jeden nebo druh\u00fd tranzistor. Na kolektor T je s odporem R 560 \u2126 p\u0159ipojena LED, tak\u017ee kdy\u017e je pr\u00e1v\u011b sepnut tento tranzistor, te\u010de do kolektoru proud p\u0159es odpor R a LED a ta se rozsv\u00edt\u00ed. V okam\u017eiku, kdy se T vypne, p\u0159estane do jeho kolektoru t\u00e9ci proud a LED zhasne.</p> <p></p>"},{"location":"electron/electron-lesson-3/#13-jednoduche-poplasne-zarizeni","title":"13. Jednoduch\u00e9 popla\u0161n\u00e9 za\u0159\u00edzen\u00ed","text":"<p>Zapojte obvod podle sch\u00e9matu. Je dobr\u00e9 prov\u00e9st d\u00edl\u010d\u00ed kontrolu po zapojen\u00ed \u010d\u00e1sti oscil\u00e1toru, kdy nen\u00ed na panelu je\u0161t\u011b mnoho vodi\u010d\u016f, sn\u00ed\u017e\u00ed se tak riziko chyby v celkov\u00e9m zapojen\u00ed. M\u00e1te-li obvod cel\u00fd zapojen a zkontrolov\u00e1n, p\u0159ipojte baterii a p\u0159epn\u011bte p\u0159ep\u00edna\u010d do polohy naho\u0159e. Pokud jsou konce popla\u0161n\u00fdch vodi\u010d\u016f rozpojeny, rozsv\u00edt\u00ed se \u010derven\u00e1 LED. Pokud konce popla\u0161n\u00fdch vodi\u010d\u016f spoj\u00edme, LED zhasne. Nyn\u00ed m\u016f\u017eete konce popla\u0161n\u00fdch vodi\u010d\u016f \u0161ikovn\u011b p\u0159ilepit t\u0159eba na \u0161upl\u00edk u stolu, kter\u00fd chcete hl\u00eddat nebo zat\u00ed\u017eit kontakty hl\u00eddan\u00fdmi p\u0159edm\u011btem a \u010dekat a\u017e se n\u011bkdo \"chyt\u00ed\".</p> <p></p>"},{"location":"electronicDie/","title":"O co jde?","text":"<p>Elektronick\u00e1 hrac\u00ed kostka je jednoduch\u00e9 elektronick\u00e9 za\u0159\u00edzen\u00ed, kter\u00e9 v\u00e1m nahrad\u00ed klasickou hrac\u00ed kostku. Ovl\u00e1d\u00e1 se jedn\u00edm tla\u010d\u00edtkem na desce, kter\u00fdm m\u016f\u017eete zapnout losov\u00e1n\u00ed \u010d\u00edsla. Jakmile v\u00e1m jedno \u010d\u00edslo padne, bude na kostce sv\u00edtit a\u017e do dal\u0161\u00edho hodu.</p> <p>Tak sm\u011ble h\u00e1zejte a nebojte se zahr\u00e1t si spolu t\u0159eba kostky.</p> <p> </p>"},{"location":"electronicDie/manual/","title":"N\u00e1vod","text":"<p> 1. P\u0159iprav\u00edme si desku pro hrac\u00ed kostku</p> <p> 2. Osad\u00edme 3 diody 1N4148 (D1, D2, D3). Pozor na polaritu! Je t\u0159eba m\u00edt \u010dern\u00fd prou\u017eek na diod\u011b na stejn\u00e9 stran\u011b, jako je nazna\u010deno b\u00edl\u00fdm prou\u017ekem na desce.</p> <p> 3. Osad\u00edme 3 rezistory 4.7 M\u03a9 (R1, R4, R9)</p> <p> 4. Osad\u00edme 3 rezistory 10 k\u03a9 (R3, R6, R10)</p> <p> 5. Osad\u00edme 3 rezistory 1 k\u03a9 (R5, R7, R8)</p> <p> 6. Osad\u00edme rezistor 2 k\u03a9 (R2)</p> <p> 7. Osad\u00edme 4 kondenz\u00e1tory 100 nF (C1, C2, C3, C4)</p> <p> 8. Osad\u00edme 1 tranzistor BC547B (T2) Je t\u0159eba dodr\u017eet orientaci dle nazna\u010den\u00ed na desce!</p> <p> 9.  Osad\u00edme 1 tranzistor BC557B (T1) Op\u011bt je t\u0159eba dodr\u017eet oto\u010den\u00ed dle n\u00e1kresu na desce!</p> <p> 10. Osad\u00edme 7 \u010derven\u00fdch LEDek (LED1, LED2, LED3, LED4, LED5, LED6, LED7) Je t\u0159eba dodr\u017eet oto\u010den\u00ed dle n\u00e1kresu na desce!</p> <p> 11. Osad\u00edme tla\u010d\u00edtko (S1)</p> <p> 12. Osad\u00edme 2 integrovan\u00e9 obvody (IC1, IC2) Je t\u0159eba dodr\u017eet orientaci! Kole\u010dko na pouzd\u0159e obvodu mus\u00ed b\u00fdt v lev\u00e9m horn\u00edm rohu na desce! Pokud si nejste oto\u010den\u00edm jisti, zeptejte se rad\u011bji lektora.</p> <p> 13. P\u0159iprav\u00edme si vte\u0159inov\u00e9 lepidlo a podlo\u017eku pod USB konektor</p> <p> 14. Podlep\u00edme USB konektor podle fotky</p> <p> 15. Dokon\u010den\u00e1 hrac\u00ed kostka</p> <p> 16.  Sv\u00edt\u00edc\u00ed hrac\u00ed kostka zapojen\u00e1 v powerbance</p>"},{"location":"electronicDie/hardware/lib/LIBRARIES/","title":"Libraries - source","text":"<p>All libraries in this project are under  Creative Commons Attribution-ShareAlike 4.0 International License (CC BY-SA).</p> <p>You can find more information in libraries internal description.</p> <p>All libraries may be modified.</p> <p>There are some source of these libraries:</p>"},{"location":"electronicDie/hardware/lib/LIBRARIES/#eagle-managed-libraries","title":"[Eagle Managed Libraries]","text":"<ul> <li><code>40xx.lbr</code> (Version 7 (urn:adsk.eagle:library:80))</li> <li><code>transistor.lbr</code> (Version 7 (urn:adsk.eagle:library:402))</li> <li>`switch-omron.lbr' (Version 3 (urn:adsk.eagle:library:377))</li> </ul>"},{"location":"electronicDie/hardware/lib/LIBRARIES/#roboticsbrnoeagle_libraries","title":"RoboticsBrno/eagle_libraries","text":"<ul> <li><code>diode.lbr</code> (revision db6a17c)</li> <li><code>NC.lib</code> (revision db6a17c)</li> <li><code>rcl_upravena.lbr</code> (revision db6a17c)</li> <li><code>test_points.lbr</code> (revision db6a17c)</li> <li><code>usb.lib</code> (revision db6a17c)     PCB USB taken from LeoStick project (https://github.com/freetronics/LeoStick)</li> </ul>"},{"location":"electronicDie/hardware/lib/LIBRARIES/#sparkfun","title":"SparkFun","text":"<ul> <li><code>SparkFun-Connectors.lbr</code> (revision b7e707d)</li> </ul>"},{"location":"electronicDie/hardware/lib/LIBRARIES/#unique","title":"[unique]","text":"<ul> <li><code>555.lbr</code> (Based on Eagle Managed Library linear.lbr Version 7 (urn:adsk.eagle:library:262))</li> </ul>"},{"location":"electronicDie/hardware/v1.0/lib/LIBRARIES/","title":"Libraries - source","text":"<p>All libraries in this project are under  Creative Commons Attribution-ShareAlike 4.0 International License (CC BY-SA).</p> <p>You can find more information in libraries internal description.</p> <p>All libraries may be modified.</p> <p>There are some source of these libraries:</p>"},{"location":"electronicDie/hardware/v1.0/lib/LIBRARIES/#eagle-managed-libraries","title":"[Eagle Managed Libraries]","text":"<ul> <li><code>40xx.lbr</code> (Version 7 (urn:adsk.eagle:library:80))</li> <li><code>transistor.lbr</code> (Version 7 (urn:adsk.eagle:library:402))</li> <li>`switch-omron.lbr' (Version 3 (urn:adsk.eagle:library:377))</li> </ul>"},{"location":"electronicDie/hardware/v1.0/lib/LIBRARIES/#roboticsbrnoeagle_libraries","title":"RoboticsBrno/eagle_libraries","text":"<ul> <li><code>diode.lbr</code> (revision db6a17c)</li> <li><code>NC.lib</code> (revision db6a17c)</li> <li><code>rcl_upravena.lbr</code> (revision db6a17c)</li> <li><code>test_points.lbr</code> (revision db6a17c)</li> <li><code>usb.lib</code> (revision db6a17c)     PCB USB taken from LeoStick project (https://github.com/freetronics/LeoStick)</li> </ul>"},{"location":"electronicDie/hardware/v1.0/lib/LIBRARIES/#sparkfun","title":"SparkFun","text":"<ul> <li><code>SparkFun-Connectors.lbr</code> (revision b7e707d)</li> </ul>"},{"location":"electronicDie/hardware/v1.0/lib/LIBRARIES/#unique","title":"[unique]","text":"<ul> <li><code>555.lbr</code> (Based on Eagle Managed Library linear.lbr Version 7 (urn:adsk.eagle:library:262))</li> </ul>"},{"location":"electronicDie/hardware/v1.1/lib/LIBRARIES/","title":"Libraries - source","text":"<p>All libraries in this project are under  Creative Commons Attribution-ShareAlike 4.0 International License (CC BY-SA).</p> <p>You can find more information in libraries internal description.</p> <p>All libraries may be modified.</p> <p>There are some source of these libraries:</p>"},{"location":"electronicDie/hardware/v1.1/lib/LIBRARIES/#eagle-managed-libraries","title":"[Eagle Managed Libraries]","text":"<ul> <li><code>40xx.lbr</code> (Version 7 (urn:adsk.eagle:library:80))</li> <li><code>transistor.lbr</code> (Version 7 (urn:adsk.eagle:library:402))</li> <li>`switch-omron.lbr' (Version 3 (urn:adsk.eagle:library:377))</li> </ul>"},{"location":"electronicDie/hardware/v1.1/lib/LIBRARIES/#roboticsbrnoeagle_libraries","title":"RoboticsBrno/eagle_libraries","text":"<ul> <li><code>diode.lbr</code> (revision db6a17c)</li> <li><code>NC.lib</code> (revision db6a17c)</li> <li><code>rcl_upravena.lbr</code> (revision db6a17c)</li> <li><code>test_points.lbr</code> (revision db6a17c)</li> <li><code>usb.lib</code> (revision db6a17c)     PCB USB taken from LeoStick project (https://github.com/freetronics/LeoStick)</li> </ul>"},{"location":"electronicDie/hardware/v1.1/lib/LIBRARIES/#sparkfun","title":"SparkFun","text":"<ul> <li><code>SparkFun-Connectors.lbr</code> (revision b7e707d)</li> </ul>"},{"location":"electronicDie/hardware/v1.1/lib/LIBRARIES/#unique","title":"[unique]","text":"<ul> <li><code>555.lbr</code> (Based on Eagle Managed Library linear.lbr Version 7 (urn:adsk.eagle:library:262))</li> </ul>"},{"location":"electronicDie/hardware/v1.2/lib/LIBRARIES/","title":"Libraries - source","text":"<p>All libraries in this project are under  Creative Commons Attribution-ShareAlike 4.0 International License (CC BY-SA).</p> <p>You can find more information in libraries internal description.</p> <p>All libraries may be modified.</p> <p>There are some source of these libraries:</p>"},{"location":"electronicDie/hardware/v1.2/lib/LIBRARIES/#eagle-managed-libraries","title":"[Eagle Managed Libraries]","text":"<ul> <li><code>40xx.lbr</code> (Version 7 (urn:adsk.eagle:library:80))</li> <li><code>transistor.lbr</code> (Version 7 (urn:adsk.eagle:library:402))</li> <li>`switch-omron.lbr' (Version 3 (urn:adsk.eagle:library:377))</li> </ul>"},{"location":"electronicDie/hardware/v1.2/lib/LIBRARIES/#roboticsbrnoeagle_libraries","title":"RoboticsBrno/eagle_libraries","text":"<ul> <li><code>diode.lbr</code> (revision db6a17c)</li> <li><code>NC.lib</code> (revision db6a17c)</li> <li><code>rcl_upravena.lbr</code> (revision db6a17c)</li> <li><code>test_points.lbr</code> (revision db6a17c)</li> <li><code>usb.lib</code> (revision db6a17c)     PCB USB taken from LeoStick project (https://github.com/freetronics/LeoStick)</li> </ul>"},{"location":"electronicDie/hardware/v1.2/lib/LIBRARIES/#sparkfun","title":"SparkFun","text":"<ul> <li><code>SparkFun-Connectors.lbr</code> (revision b7e707d)</li> </ul>"},{"location":"electronicDie/hardware/v1.2/lib/LIBRARIES/#unique","title":"[unique]","text":"<ul> <li><code>555.lbr</code> (Based on Eagle Managed Library linear.lbr Version 7 (urn:adsk.eagle:library:262))</li> </ul>"},{"location":"logic/","title":"Index","text":"<p>         Dokumentace pro Logic byla spolu s uveden\u00edm nov\u00e9 verze desky p\u0159esunuta. N\u00e1vody pro ostatn\u00ed v\u00fdrobky z t\u00e1bora st\u00e1le z\u016fst\u00e1vaj\u00ed zde. Chcete p\u0159ej\u00edt na novou verzi?         logic.robotikabrno.cz </p> Z\u016fstat P\u0159ej\u00edt O co jde? <p>       Logic je univerz\u00e1ln\u00ed programovateln\u00e1 deska ur\u010den\u00e1 pro v\u00fduku z\u00e1klad\u016f programov\u00e1n\u00ed.       Tvar desky je navr\u017een tak, aby se na n\u00ed dala jednodu\u0161e hr\u00e1t obl\u00edben\u00e1 hra Logik.       D\u00e1le se na desce d\u00e1 tak\u00e9 hr\u00e1t nap\u0159\u00edklad TicTacToe, Simon, nebo velmi zn\u00e1m\u00e1 hra Had.     </p> <p>       Deska obsahuje 105 inteligentn\u00edch LED a 9 u\u017eivatelsky programovateln\u00fdch tla\u010d\u00edtek.       Pro zvukovou signalizaci je na Logicu tak\u00e9 piezo.       Mozkem Logicu je modern\u00ed mikrokontrol\u00e9r ESP32.     </p> <p> </p>"},{"location":"logic/examples/","title":"K\u00f3dov\u00e9 p\u0159\u00edklady","text":"<p>K\u00f3dov\u00e9 p\u0159\u00edklady najde\u0161 v ZIPu tady. Uvnit\u0159 ZIPu jsou p\u0159\u00edklady ve slo\u017ece <code>examples/</code>.</p> <p>Ka\u017ed\u00e1 slo\u017eka v <code>examples/</code> je \u00fapln\u00fd projekt, kter\u00fd lze otev\u0159\u00edt ve VSCode pomoc\u00ed File -&gt; Open folder.</p>"},{"location":"logic/install/","title":"Instalace IDE","text":"<p>Pro v\u00fdvoj program\u016f pro desku Logik pot\u0159ebujete nainstalovat n\u011bkolik sou\u010d\u00e1st\u00ed:</p> <ol> <li>Editor Visual Studio Code</li> <li>Python<ol> <li>Na Windows 8 a vy\u0161\u0161\u00ed je t\u0159eba Python 3.9 nebo vy\u0161\u0161\u00ed z Windows Store</li> <li>Na Windows 7 je t\u0159eba Python 3.8.10</li> </ol> </li> <li>Spr\u00e1vce verz\u00ed Git</li> <li>Ovlada\u010de pro p\u0159\u00edpojen\u00ed Logika do po\u010d\u00edta\u010de p\u0159es USB (Windows 7, Windows 8 a vy\u0161\u0161\u00ed)</li> <li>Roz\u0161\u00ed\u0159en\u00ed platform.io do Visual Studio Code</li> </ol> <p>Postupujte na t\u00e9to str\u00e1nce odshora dol\u016f a n\u00e1sledujte instrukce.</p>"},{"location":"logic/install/#1-visual-studio-code","title":"1. Visual Studio Code","text":"<p>Editor, ve kter\u00e9m budeme tvo\u0159it programy. St\u00e1hn\u011bte ho z ofici\u00e1ln\u00edho webu a nainstalujte.</p>"},{"location":"logic/install/#2-python","title":"2. Python","text":"<p>Na po\u010d\u00edta\u010di mus\u00ed b\u00fdt instalovan\u00e1 podpora pro programovac\u00ed jazyk Python.</p>"},{"location":"logic/install/#windows-8-windows-10","title":"Windows 8, Windows 10","text":"<p>Na nov\u011bj\u0161\u00edch Windows je nutn\u00e9 nainstalovat Python p\u0159es Windows Store, jin\u00e9 cesty nefunguj\u00ed. Otev\u0159ete aplikaci Windows Store (t\u0159eba p\u0159es start menu), v n\u00ed najd\u011bte pomoc\u00ed hled\u00e1n\u00ed Python 3.9 a z\u00edskejte/nainstalujte ho. M\u016f\u017eete tak\u00e9 zkusit p\u0159\u00edm\u00fd odkaz</p>"},{"location":"logic/install/#windows-7","title":"Windows 7","text":"<p>St\u00e1hn\u011bte Python 3.8 (nov\u011bj\u0161\u00ed na Windows 7 nefunguje) a nainstalujte ho. Ujist\u011bte se, \u017ee mo\u017enost \"Add to PATH\" je p\u0159i instalaci zatr\u017eena.</p>"},{"location":"logic/install/#3-git","title":"3. Git","text":"<p>St\u00e1hn\u011bte si Git a nainstalujte ho. V\u0161echno v instal\u00e1toru m\u016f\u017eete nechat na v\u00fdchoz\u00edch hodnot\u00e1ch a pouze klikat \"next\".</p>"},{"location":"logic/install/#4-ovladace-pro-logic","title":"4. Ovlada\u010de pro Logic","text":"<p>St\u00e1hn\u011bte si ovlada\u010de:</p> <ul> <li>Windows 8, Windows 10</li> <li>Windows 7</li> </ul> <p>Po sta\u017een\u00ed je t\u0159eba ZIP extrahovat (prav\u00fd klik na soubor -&gt; Extrahovat v\u0161e), a spustit soubor <code>CP210xVCPInstaller_x64.exe</code> kter\u00fd se nach\u00e1z\u00ed uvnit\u0159.</p>"},{"location":"logic/install/#5-rozsireni-platformio-ide","title":"5. Roz\u0161\u00ed\u0159en\u00ed Platform.io IDE","text":"<p>Otev\u0159eme Visual Studio Code a nainstalujeme platform.io roz\u0161\u00ed\u0159en\u00ed:</p> <p> 1. Otev\u0159ete VSCode a klikn\u011bte na \u010dtveratou ikonku roz\u0161\u00ed\u0159en\u00ed na lev\u00e9 stran\u011b.</p> <p> 2. Najd\u011bte a nainstalujte roz\u0161\u00ed\u0159en\u00ed PlatformIO IDE.</p> <p> 3. Po nainstalov\u00e1n\u00ed roz\u0161\u00ed\u0159en\u00ed se za\u010dne stahovat spousta dopl\u0148kov\u00fdch bal\u00ed\u010dk\u016f. Po\u010dkejte, dokud se nenainstaluj\u00ed C/C++ Extensions\u2026</p> <p> 4. \u2026 a tak\u00e9 PlatformIO Core. Na pomalej\u0161\u00edm internetov\u00e9m p\u0159ipojen\u00edm to bude chv\u00edli trvat.</p> <p> 5. Jakmile je v\u0161e hotovo, VSCode v\u00e1m nab\u00eddne restart. P\u0159ijm\u011bte ho.</p>"},{"location":"logic/install/#6-hotovo","title":"6. Hotovo","text":"<p>Te\u010f by jste m\u011bli m\u00edt p\u0159ipraveno prost\u0159ed\u00ed pro programov\u00e1n\u00ed Logika. M\u016f\u017eete t\u0159eba zkusit st\u00e1hnout p\u0159\u00edkladov\u00e9 projekty, pomoc\u00ed File -&gt; Open Folder n\u011bkter\u00fd z nich otev\u0159it a nahr\u00e1t do Logika pomoc\u00ed mal\u00e9 ikonky \u0161ipky na doln\u00edm modr\u00e9m baru.</p>"},{"location":"logic/manual/","title":"N\u00e1vod","text":"<p>Logic je univerz\u00e1ln\u00ed programovateln\u00e1 deska ur\u010den\u00e1 pro v\u00fduku z\u00e1klad\u016f programov\u00e1n\u00ed. Tvar desky je navr\u017een tak, aby se na n\u011bm dala jednodu\u0161e hr\u00e1t obl\u00edben\u00e1 hra Logik. D\u00e1le se na desce d\u00e1 tak\u00e9 hr\u00e1t nap\u0159\u00edklad TicTacToe, Simon, nebo velmi zn\u00e1m\u00e1 hra Had.</p> <p>Deska obsahuje 105 inteligentn\u00edch ledek a 9 u\u017eivatelsky programovateln\u00fdch tla\u010d\u00edtek. Pro zvukovou signalizaci je na Logicu tak\u00e9 piezo.</p> <p>Mozkem Logicu je modern\u00ed mikrokontrol\u00e9r ESP32.</p>"},{"location":"logic/manual/#navod-na-slozeni","title":"N\u00e1vod na slo\u017een\u00ed","text":"<p> 1. P\u0159iprav\u00edme si pot\u0159ebn\u00fd materi\u00e1l podle fotky</p> <p> 2. Vlo\u017e\u00edme piezo do desky podle obr\u00e1zku (pozor na oto\u010den\u00ed sou\u010d\u00e1stky)</p> <p> 3. P\u0159ip\u00e1j\u00edme piezo k desce</p> <p> 4. Pomoc\u00ed \u0161t\u00edpac\u00edch kle\u0161t\u00ed zast\u0159ihneme p\u0159e\u010dn\u00edvaj\u00edc\u00ed no\u017ei\u010dky</p> <p> 5. Ust\u0159ihneme si dutinky a pinheady podle zad\u00e1n\u00ed.     - 2x pinhead a dutinky o d\u00e9lce 4 piny     - 1x pinhead a dutinky o d\u00e9lce 7 pin\u016f </p> <p> 6.  Pomoc\u00ed zalamovac\u00edho no\u017ee si opatrn\u011b za\u010dist\u00edme okraje</p> <p> 7. Za\u010di\u0161t\u011bn\u00e9 d\u00edlky</p> <p> 8.  Pinheady zastr\u010d\u00edme del\u0161\u00ed stranou do dutinek</p> <p> 9. Zastr\u010d\u00edme d\u00edlky do desky dutinkami nap\u0159ed. Nachyst\u00e1me si 4 \u0161roubky</p> <p> 10.  Vlo\u017e\u00edme \u0161roubky do desky a nachyst\u00e1me si podlo\u017eky</p> <p> 11. Vlo\u017e\u00edme na \u0161rouby nachystan\u00e9 podlo\u017eky</p> <p> 12.   Nachyst\u00e1me si 4 distan\u010dn\u00ed sloupky a na\u0161roubujeme je na \u0161rouby</p> <p> 13.  Nachyst\u00e1me si podlo\u017eky</p> <p> 14.  Podlo\u017eky polo\u017e\u00edme na distan\u010dn\u00ed sloupky a p\u0159iprav\u00edme si dal\u0161\u00ed desku</p> <p> 15.  Desky nasad\u00edme na sebe tak, aby n\u00e1m sed\u011bly d\u00edry a pinheady</p> <p> 16. P\u0159iprav\u00edme si 4 \u0161roubky</p> <p> 17. P\u0159i\u0161roubujeme vrchn\u00ed desku (pozor na podlo\u017eky)</p> <p> 18.  Zkontrolujte si, \u017ee pinheady sm\u011b\u0159uj\u00ed k vrchn\u00ed desce s ledkami a dutinky le\u017e\u00ed na spodn\u00ed desce</p> <p> 19.  Zap\u00e1j\u00edme pinheady na horn\u00ed stran\u011b Logicu</p> <p> 20.  Zap\u00e1j\u00edme dutinky na spodn\u00ed stran\u011b Logicu</p> <p> 21. Hotov\u00fd logic zep\u0159edu</p> <p> 22. Hotov\u00fd logic zezadu</p>"},{"location":"logic/code/buttons/","title":"Tla\u010d\u00edtka","text":""},{"location":"logic/code/buttons/#prime-cteni-tlacitek","title":"P\u0159\u00edm\u00e9 \u010dten\u00ed tla\u010d\u00edtek","text":"<ul> <li><code>buttons.read(gpio_num_t gpio)</code> : </li> </ul>"},{"location":"logic/code/buttons/#nazvy-tlacitek","title":"N\u00e1zvy tla\u010d\u00edtek","text":"<ul> <li><code>Enter</code></li> <li><code>Up</code></li> <li><code>Down</code></li> <li><code>Left</code></li> <li><code>Right</code></li> <li><code>LeftUp</code></li> <li><code>LeftDown</code></li> <li><code>RightUp</code></li> <li><code>RightDown</code></li> </ul>"},{"location":"logic/code/buttons/#priklad-pouziti","title":"P\u0159\u00edklad pou\u017eit\u00ed","text":"<pre><code>#include \"Logic.hpp\"\n#include &lt;iostream&gt;\n\nvoid logicMain() {\nwhile (true) {\ndisplay.clear();\n\nif(buttons.read(Enter)) {\ndisplay.drawSquareFilled(3, 3, 4, Rgb(255, 255, 255));    }\nelse if(buttons.read(Right)) {\ndisplay.drawSquareFilled(6, 3, 4, Rgb(255, 255, 255));\n}\nelse if(buttons.read(Down)) {\ndisplay.drawSquareFilled(3, 6, 4, Rgb(255, 255, 255));\n}\nelse if(buttons.read(Left)) {\ndisplay.drawSquareFilled(0, 3, 4, Rgb(255, 255, 255));\n}\nelse if(buttons.read(Up)) {\ndisplay.drawSquareFilled(3, 0, 4, Rgb(255, 255, 255));\n}\ndisplay.show(30);\n}\n}\n</code></pre>"},{"location":"logic/code/buttons/#registrace-udalosti-na-tlacitka","title":"Registrace ud\u00e1lost\u00ed na tla\u010d\u00edtka","text":""},{"location":"logic/code/buttons/#buttonsprizmene-buttonsonchange","title":"buttons.priZmene / buttons.onChange","text":"CZ <pre><code>buttons.priZmene([](std::bitset&lt;MaxID&gt; aktualniStav, std::bitset&lt;MaxID&gt; zmenenaTlacitka) {\nif (zmenenaTlacitka[Up] == 1) {\n\nstd::cout &lt;&lt; \"Tla\u010d\u00edtko Nahoru se zm\u011bnilo a te\u010f je \";\n\nif (aktualniStav[Up] == 1) {\nstd::cout &lt;&lt; \"zm\u00e1\u010dknut\u00e9.\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"pu\u0161t\u011bn\u00e9.\" &lt;&lt; std::endl;\n}\n}\n});\n\nbuttons.priZmene([](std::bitset&lt;MaxID&gt; aktualniStav) {\nstd::cout &lt;&lt; \"Tla\u010d\u00edtko Nahoru je nyn\u00ed \";\n\nif (aktualniStav[Up] == 1) {\nstd::cout &lt;&lt; \"zm\u00e1\u010dknut\u00e9.\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"pu\u0161t\u011bn\u00e9.\" &lt;&lt; std::endl;\n}\n});\n\nbuttons.priZmene([]() {\nstd::cout &lt;&lt; \"Tla\u010d\u00edtko bylo zm\u011bn\u011bno. Nen\u00ed k dispozici v\u00edce informac\u00ed.\" &lt;&lt; std::endl;\n});\n\nbuttons.priZmene([](std::bitset&lt;MaxID&gt; aktualniStav, std::bitset&lt;MaxID&gt; zmenenaTlacitka) {\nstd::cout &lt;&lt; \"Tohle uvid\u00edte pouze pokud se zm\u011bn\u00ed tla\u010d\u00edtko Dol\u016f, a toto tla\u010d\u00edtko je nyn\u00ed \";\n\nif (aktualniStav[Down] == 1) {\nstd::cout &lt;&lt; \"zm\u00e1\u010dknut\u00e9.\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"pu\u0161t\u011bn\u00e9.\" &lt;&lt; std::endl;\n}\n}, Down);\n\nbuttons.priZmene([](bool isPressed) {\nstd::cout &lt;&lt; \"Tohle uvid\u00edte pouze pokud se zm\u011bn\u00ed tla\u010d\u00edtko Dol\u016f\" &lt;&lt; std::endl;\n\nif (isPressed == 1) {\nstd::cout &lt;&lt; \"zm\u00e1\u010dknut\u00e9.\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"pu\u0161t\u011bn\u00e9.\" &lt;&lt; std::endl;\n}\n}, Down);\n\n\nbuttons.onChange([]() {\nstd::cout &lt;&lt; \"Tohle uvid\u00edte pouze pokud se zm\u011bn\u00ed tla\u010d\u00edtko Dol\u016f\" &lt;&lt; std::endl;\n}, Down);\n</code></pre> EN <pre><code>buttons.onChange([](std::bitset&lt;MaxID&gt; currentState, std::bitset&lt;MaxID&gt; buttonChange) {\nif (buttonChange[up] == 1) {\n\nstd::cout &lt;&lt; \"Button Up has changed and is now \";\n\nif (currentState[Up] == 1) {\nstd::cout &lt;&lt; \"pressed.\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"released.\" &lt;&lt; std::endl;\n}\n}\n});\n\nbuttons.onChange([](std::bitset&lt;MaxID&gt; currentState) {\nstd::cout &lt;&lt; \"Button Up is now \";\n\nif (currentState[Up] == 1) {\nstd::cout &lt;&lt; \"pressed.\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"released.\" &lt;&lt; std::endl;\n}\n});\n\nbuttons.onChange([]() {\nstd::cout &lt;&lt; \"A button has changed. No more information available\" &lt;&lt; std::endl;\n});\n\nbuttons.onChange([](std::bitset&lt;MaxID&gt; currentState, std::bitset&lt;MaxID&gt; buttonChange) {\nstd::cout &lt;&lt; \"You will see this only when Button Down changes, and the button is now \";\n\nif (currentState[Down] == 1) {\nstd::cout &lt;&lt; \"pressed.\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"released.\" &lt;&lt; std::endl;\n}\n}, Down);\n\nbuttons.onChange([](bool isPressed) {\nstd::cout &lt;&lt; \"You will see this only when Button Down changes\" &lt;&lt; std::endl;\n\nif (isPressed == 1) {\nstd::cout &lt;&lt; \"pressed.\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"released.\" &lt;&lt; std::endl;\n}\n}, Down);\n\n\nbuttons.onChange([]() {\nstd::cout &lt;&lt; \"You will see this only when Button Down changes\" &lt;&lt; std::endl;\n}, Down);\n</code></pre>"},{"location":"logic/code/buttons/#buttonspristisku-buttonsonpress","title":"buttons.priStisku / buttons.onPress","text":"CZ <pre><code>buttons.priStisku([](std::bitset&lt;MaxID&gt; aktualniStav, std::bitset&lt;MaxID&gt; zmena) {\nstd::cout &lt;&lt; \"N\u011bjak\u00e9 tla\u010d\u00edtko bylo zm\u00e1\u010dknuto. \";\n\nif (zmena[Right] == 1) {\nstd::cout &lt;&lt; \"Bylo to tla\u010d\u00edtko Vpravo\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"Nebylo to tla\u010d\u00edtko Vpravo\" &lt;&lt; std::endl;\n}\n});\n\nbuttons.priStisku([](std::bitset&lt;MaxID&gt; aktualniStav) {\nstd::cout &lt;&lt; \"N\u011bjak\u00e9 tla\u010d\u00edtko bylo zm\u00e1\u010dknuto. \";\n\nstd::cout &lt;&lt; \"Tla\u010d\u00edtka \";\n\nfor(int i = 0; i &lt; MaxID; i++) {\nif (aktualniStav[i] == 1) {\nstd::cout &lt;&lt; i &lt;&lt; \", \";\n}\n}\n\nstd::cout &lt;&lt; \"jsou nyn\u00ed zm\u00e1\u010dknut\u00e1.\" &lt;&lt; std::endl;\n});\n\nbuttons.priStisku([]() {\nstd::cout &lt;&lt; \"Tla\u010d\u00edtko bylo Zm\u00e1\u010dknuto. Nen\u00ed k dispozici v\u00edce informac\u00ed.\" &lt;&lt; std::endl;\n});\n\nbuttons.priStisku([]() {\nstd::cout &lt;&lt; \"Tohle uvid\u00edte pouze pokud zm\u00e1\u010dknete tla\u010d\u00edtko Vlevo.\" &lt;&lt; std::endl;\n}, Left);\n</code></pre> EN <pre><code>buttons.onPress([](std::bitset&lt;MaxID&gt; currentState, std::bitset&lt;MaxID&gt; changed) {\nstd::cout &lt;&lt; \"A button has been pressed. \";\n\nif (changed[Right] == 1) {\nstd::cout &lt;&lt; \"It was the Right button\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"It was not the Right button\" &lt;&lt; std::endl;\n}\n});\n\nbuttons.onPress([](std::bitset&lt;MaxID&gt; currentState) {\nstd::cout &lt;&lt; \"A button has been pressed. \";\n\nstd::cout &lt;&lt; \"Buttons \";\n\nfor(int i = 0; i &lt; MaxID; i++) {\nif (currentState[i] == 1) {\nstd::cout &lt;&lt; i &lt;&lt; \", \";\n}\n}\n\nstd::cout &lt;&lt; \"are now pressed.\" &lt;&lt; std::endl;\n});\n\nbuttons.onPress([]() {\nstd::cout &lt;&lt; \"A button has been pressed. No more information available\" &lt;&lt; std::endl;\n});\n\nbuttons.onPress([]() {\nstd::cout &lt;&lt; \"You will see this only when Button Left get pressed down.\" &lt;&lt; std::endl;\n}, Left);\n</code></pre>"},{"location":"logic/code/buttons/#buttonspriuvolneni-buttonsonrelease","title":"buttons.priUvolneni / buttons.onRelease","text":"CZ <pre><code>buttons.priUvolneni([](std::bitset&lt;MaxID&gt; aktualniStav, std::bitset&lt;MaxID&gt; zmena) {\nstd::cout &lt;&lt; \"Tla\u010d\u00edtko bylo pu\u0161t\u011bno. \";\n\nif (zmena[Right] == 1) {\nstd::cout &lt;&lt; \"Bylo to tla\u010d\u00edtko Vpravo\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"Nebylo to tla\u010d\u00edtko Vpravo\" &lt;&lt; std::endl;\n}\n});\n\nbuttons.priUvolneni([](std::bitset&lt;MaxID&gt; aktualniStav) {\nstd::cout &lt;&lt; \"Tla\u010d\u00edtko bylo pu\u0161t\u011bno. \";\n\nstd::cout &lt;&lt; \"Tla\u010d\u00edtka \";\n\nfor(int i = 0; i &lt; MaxID; i++) {\nif (aktualniStav[i] == 0) {\nstd::cout &lt;&lt; i &lt;&lt; \", \";\n}\n}\n\nstd::cout &lt;&lt; \"jsou nyn\u00ed pu\u0161t\u011bn\u00e1.\" &lt;&lt; std::endl;\n});\n\nbuttons.priUvolneni([]() {\nstd::cout &lt;&lt; \"Tla\u010d\u00edtko bylo uvoln\u011bno. Nen\u00ed k dispozici v\u00edce informac\u00ed.\" &lt;&lt; std::endl;\n});\n\nbuttons.priUvolneni([]() {\nstd::cout &lt;&lt; \"Tohle uvid\u00edte pouze pokud pust\u00edte tla\u010d\u00edtko Vlevo.\" &lt;&lt; std::endl;\n}, Left);\n</code></pre> EN <pre><code>buttons.onRelease([](std::bitset&lt;MaxID&gt; currentState, std::bitset&lt;MaxID&gt; changed) {\nstd::cout &lt;&lt; \"A button has been released. \";\n\nif (changed[Right] == 0) {\nstd::cout &lt;&lt; \"It was the Right button\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"It was not the Right button\" &lt;&lt; std::endl;\n}\n});\n\nbuttons.onRelease([](std::bitset&lt;MaxID&gt; currentState) {\nstd::cout &lt;&lt; \"A button has been released. \";\n\nstd::cout &lt;&lt; \"Buttons \";\n\nfor(int i = 0; i &lt; MaxID; i++) {\nif (currentState[i] == 0) {\nstd::cout &lt;&lt; i &lt;&lt; \", \";\n}\n}\n\nstd::cout &lt;&lt; \"are now released.\" &lt;&lt; std::endl;\n});\n\nbuttons.onRelease([]() {\nstd::cout &lt;&lt; \"A button has been released. No more information available\" &lt;&lt; std::endl;\n});\n\nbuttons.onRelease([]() {\nstd::cout &lt;&lt; \"You will see this only when Button Left gets released.\" &lt;&lt; std::endl;\n}, Left);   </code></pre>"},{"location":"logic/code/buzzer/","title":"Bzu\u010d\u00e1k","text":"CZ <ul> <li><code>bool jeZapnuty()</code> : </li> <li><code>void zapnout()</code> : </li> <li><code>void vypnout()</code> : </li> </ul> EN <ul> <li><code>bool isOn()</code> :   </li> <li><code>void on()</code> : </li> <li><code>void off()</code> :    </li> </ul>"},{"location":"logic/code/buzzer/#priklad-pouziti","title":"P\u0159\u00edklad pou\u017eit\u00ed","text":"<pre><code>#include \"Logic.hpp\"\n#include &lt;iostream&gt;\n\nvoid logicMain() {\nwhile (true) {\nif(buttons.read(Enter)) {\nbuzzer.on();\n} else\n{\nbuzzer.off();\n}\n}\n\n}\n</code></pre>"},{"location":"logic/code/display/","title":"Displej","text":"CZ <ul> <li> <p><code>Rgb&amp; pozice(int x, int y)</code> : Vr\u00e1t\u00ed pixel na dan\u00e9 pozici</p> </li> <li> <p><code>void nastavBarvu(int x, int y, Rgb color)</code> : Nastav\u00ed barvu pixelu na dan\u00e9 pozici</p> </li> <li> <p><code>void vycisti()</code> : Vy\u010dist\u00ed cel\u00fd displej</p> </li> <li> <p><code>void vypln(Rgb barva)</code> : Vypl\u0148 cel\u00fd displej barvou</p> </li> <li> <p><code>void nakresliObdelnik(int x, int y, int sirka, int vyska, Rgb barva, int tloustkaCary = 1)</code> : Nakresl\u00ed obd\u00e9ln\u00edk se zadan\u00fdmi parametry</p> </li> <li> <p><code>void nakresliObdelnik(const Obdelnik&amp; obdelnik, Rgb barva, int tloustkaCary = 1)</code> :  Nakresl\u00ed obd\u00e9ln\u00edk se zadan\u00fdmi parametry</p> </li> <li> <p><code>void nakresliObdelnikVyplneny(int x, int y, int sirka, int vyska, Rgb barva)</code> :  Nakresl\u00ed vypln\u011bn\u00fd obd\u00e9ln\u00edk se zadan\u00fdmi parametry</p> </li> <li> <p><code>void nakresliObdelnikVyplneny(const Obdelnik&amp; obdelnik, Rgb barva)</code> : Nakresl\u00ed vypln\u011bn\u00fd obd\u00e9ln\u00edk se zadan\u00fdmi parametry   </p> </li> <li> <p><code>void nakresliCtverec(int x, int y, int strana, Rgb barva, int tlouskaCary = 1)</code> : Nakresl\u00ed \u010dtverec se zadan\u00fdmi parametry </p> </li> <li> <p><code>void nakresliCtverecVyplneny(int x, int y, int strana, Rgb barva)</code> : Nakresl\u00ed \u010dtverec se zadan\u00fdmi parametry</p> </li> <li> <p><code>void nakresliKruznici(int stredX, int stredY, int polomer, Rgb barva)</code> : Nakresl\u00ed kru\u017enici s dan\u00fdmi parametry</p> </li> <li> <p><code>void nakresliKruzniciVyplnenou(int stredX, int stredY, int polomer, Rgb barva)</code> : Nakresl\u00ed vypln\u011bnou kru\u017enici (kruh) s dan\u00fdmi parametry</p> </li> <li> <p><code>void nakresliCaru(int x1, int y1, int x2, int y2, Rgb barva, int tloustkaCary = 1)</code> : Nakresl\u00ed \u010d\u00e1ru  </p> </li> <li> <p><code>void ukaz(int intenzita = 255)</code> : Vykresli p\u0159ipraven\u00fd sn\u00edmek na displeji </p> </li> </ul> EN <ul> <li> <p><code>Rgb&amp; at(int x, int y)</code> : Returns reference to pixel on that position</p> </li> <li> <p><code>void setColor(int x, int y, Rgb color)</code> : Set the color of pixel at specified position</p> </li> <li> <p><code>void clear()</code> :  Clear the display</p> </li> <li> <p><code>void fill(Rgb color)</code> :  Fill the display with color</p> </li> <li> <p><code>void drawRectangle(int x, int y, int width, int height, Rgb color, int strokeWidth = 1)</code> : Draw rectangle with specified parameters</p> </li> <li> <p><code>void drawRectangle(const Rectangle&amp; rect, Rgb color, int strokeWidth = 1)</code> : Draw rectangle with specified parameters</p> </li> <li> <p><code>void drawRectangleFilled(int x, int y, int width, int height, Rgb color)</code> :  Draw filled rectangle with specified parameters</p> </li> <li> <p><code>void drawRectangleFilled(const Rectangle&amp; rect, Rgb color)</code> : Draw filled rectangle with specified parameters    </p> </li> <li> <p><code>void drawSquare(int x, int y, int size, Rgb color, int strokeWidth = 1)</code> : Draw square with specified parameters </p> </li> <li> <p><code>void drawSquareFilled(int x, int y, int size, Rgb color)</code> :  Draw filled square with specified parameters</p> </li> <li> <p><code>void drawCircle(int centerX, int centerY, int radius, Rgb color)</code> :  Draw circle with specified parameters</p> </li> <li> <p><code>void drawCircleFilled(int centerX, int centerY, int radius, Rgb color)</code> :    </p> </li> <li> <p><code>void drawLine(int x1, int y1, int x2, int y2, Rgb color, int strokeWidth = 1)</code> : Draw line</p> </li> <li> <p><code>void show(int intensity = 255)</code> : Show prepared frame on display</p> </li> </ul>"},{"location":"logic/code/display/#priklad-pouziti","title":"P\u0159\u00edklad pou\u017eit\u00ed","text":"<pre><code>#include \"Logic.hpp\"\n#include &lt;iostream&gt;\n\nvoid logicMain() {\nwhile (true)\n{\ndisplay.fill(Rgb(255, 0, 0)); //red\n\ndisplay.show(30);\ndelay(3000);\ndisplay.clear();\n\ndisplay.drawLine(1, 0, 8, 0, Rgb(255, 0, 0)); // red\ndisplay.drawLine(0, 1, 8, 9, Rgb(0, 255, 0)); // green\n\ndisplay.show(30);\ndelay(3000);\ndisplay.clear();\n\ndisplay.drawRectangle(0, 1, 8, 4, Rgb(255, 0, 0)); // red\ndisplay.drawRectangle(4, 3, 6, 5, Rgb(0, 255, 0)); // green\n\ndisplay.show(30);\ndelay(3000);\ndisplay.clear();\n\ndisplay.drawRectangleFilled(0, 1, 8, 4, Rgb(255, 0, 0)); // red\ndisplay.drawRectangleFilled(4, 3, 6, 5, Rgb(0, 255, 0)); // green\n\ndisplay.show(30);\ndelay(3000);\ndisplay.clear();\n\ndisplay.drawCircle(3, 3, 2, Rgb(255, 0, 0)); // red\ndisplay.drawCircle(6, 7, 3, Rgb(0, 255, 0)); // green\n\ndisplay.show(30);\ndelay(3000);\ndisplay.clear();\n\ndisplay.drawCircleFilled(3, 3, 2, Rgb(255, 0, 0)); // red\ndisplay.drawCircleFilled(6, 7, 3, Rgb(0, 255, 0)); // green   \n\ndisplay.show(30);\ndelay(3000);\ndisplay.clear();\n\ndisplay.drawSquare(1, 1, 3, Rgb(255, 0, 0)); //red\ndisplay.drawSquare(4, 5, 4, Rgb(0, 255, 0)); // green\n\ndisplay.show(30);\ndelay(3000);\ndisplay.clear();\n\ndisplay.drawSquareFilled(1, 1, 3, Rgb(255, 0, 0)); //red\ndisplay.drawSquareFilled(4, 5, 4, Rgb(0, 255, 0)); // green\n\ndisplay.show(30);\ndelay(3000);\ndisplay.clear();\n\ndisplay.at(0, 0) = Rgb(255, 0, 0); // red\ndisplay.at(4, 7) = Rgb(0, 255, 0); // green\n}\n}\n</code></pre>"},{"location":"logic/code/example/","title":"P\u0159\u00edklady dokumentace","text":"<p>Pozor</p> <p>Popisek v\u00fdrazn\u00fd</p> <pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid ukol3()\n{\nconst int poc = 5;\nint pole[poc];\nnactiPole(pole, poc);\nvypisPole(pole, poc);\nsectiPole(pole, poc);\n}\n\n\nint main(int argc, char *argv[])\n{\nukol3();\nreturn 0;\n}\n</code></pre>"},{"location":"logic/code/example/#zatrzitka","title":"Zatr\u017e\u00edtka","text":"<ul> <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit</li> <li> Vestibulum convallis sit amet nisi a tincidunt<ul> <li> In hac habitasse platea dictumst</li> <li> In scelerisque nibh non dolor mollis congue sed et metus</li> <li> Praesent sed risus massa</li> </ul> </li> <li> Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque</li> </ul>"},{"location":"logic/code/example/#bloky-vyberu","title":"Bloky v\u00fdb\u011bru","text":""},{"location":"logic/code/example/#uzitecne-funkce","title":"U\u017eite\u010dn\u00e9 funkce","text":"CZ <ul> <li>`` : </li> </ul> EN <ul> <li>`` : </li> </ul> <p>Info</p> <p>Pozn\u00e1mka!!! dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> C <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\nprintf(\"Hello world!\\n\");\nreturn 0;\n}\n</code></pre> C++ <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\nstd::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\nreturn 0;\n}\n</code></pre>"},{"location":"logic/code/example/#klavesy","title":"Kl\u00e1vesy","text":"<p>Ctrl+Alt+Del</p>"},{"location":"logic/code/example/#schovany-bloky","title":"Schovan\u00fd bloky","text":"Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"logic/code/example/#pozor","title":"pozor","text":"<p>Bug</p> <p>Pozor bug!!! dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"logic/code/links/","title":"U\u017eite\u010dn\u00e9 odkazy","text":"<p>Webov\u00e1 dokumentace</p> <ul> <li>Paleta pro ohe\u0148</li> </ul>"},{"location":"logic/code/projects/","title":"Vzorov\u00e9 projekty","text":"<p>N\u00ed\u017ee najdete seznam uk\u00e1zkov\u00fdch aplikac\u00ed pro Logika.</p>"},{"location":"logic/code/projects/#vzorove-projekty-v-anglictine","title":"Vzorov\u00e9 projekty v angli\u010dtin\u011b","text":"<ul> <li>Hra pong</li> <li>Hra \"Simon \u0159\u00edk\u00e1\"</li> <li>Grafika: Generativn\u00ed design</li> <li>Grafika: Simulace ohn\u011b</li> <li>Grafika: Simulace Knight Ridera</li> <li>Hra had, kde je v\u00fdvoj hry uk\u00e1z\u00e1n v r\u016fzn\u00fdch f\u00e1z\u00edch (p\u0159ib\u00fdvaj\u00ed funkce)<ul> <li>1. iterace</li> <li>2. iterace</li> <li>3. iterace</li> <li>4. iterace</li> </ul> </li> </ul>"},{"location":"logic/code/projects/#vzorove-projekty-v-cestine","title":"Vzorov\u00e9 projekty v \u010de\u0161tin\u011b","text":"<ul> <li>Vykreslen\u00ed \u0161achovnice</li> </ul>"},{"location":"logic/code/projects/#inspirace","title":"Inspirace","text":"<p>Chce\u0161 si n\u011bco naprogramovat a nev\u00ed\u0161 co? Zkus n\u00e1sleduj\u00edc\u00ed!</p>"},{"location":"logic/code/projects/#hry","title":"Hry","text":"<ul> <li>logic</li> <li>flappy bird</li> <li>bludi\u0161t\u011b</li> <li>plo\u0161inovka</li> <li>pi\u0161kvorky</li> <li>bomber</li> <li>tetris</li> <li>asteroids</li> <li>miny</li> </ul>"},{"location":"logic/code/projects/#hry-pro-vice-lidi","title":"Hry pro v\u00edce lid\u00ed","text":"<ul> <li>lod\u011b</li> <li>pi\u0161kvorky</li> <li>\u0161achy</li> <li>d\u00e1ma</li> <li>snake</li> <li>pong</li> </ul>"},{"location":"logic/code/projects/#fancy-grafika","title":"Fancy grafika","text":"<ul> <li>baterka (nastaviteln\u00fd jas / barva)</li> <li>ohe\u0148</li> <li>sinus</li> <li>duha</li> <li>animace</li> </ul>"},{"location":"logic/code/statusBar/","title":"Status bar","text":"CZ <ul> <li><code>void nastavStav(int stav)</code> : Nastav\u00ed stav </li> <li><code>int stav()</code> : Vr\u00e1t\u00ed aktu\u00e1ln\u011b nastaven\u00fd stav </li> <li><code>void nastavBarvu(Rgb barva)</code> : Nastav\u00ed barvu stavov\u00e9 \u0159\u00e1dky</li> <li><code>Rgb barva()</code> : Vr\u00e1t\u00ed aktu\u00e1ln\u00ed barvu stavov\u00e9ho \u0159\u00e1dku</li> <li><code>void ukaz(int intenzita = 255)</code> : Vykresl\u00ed aktu\u00e1ln\u00ed sn\u00edmek/stav</li> <li><code>void vycisti()</code> : Vy\u010dist\u00ed cel\u00fd displej</li> <li><code>Rgb&amp; pozice(int x)</code> : Vr\u00e1t\u00ed pixel na dan\u00e9 pozici</li> <li><code>Rgb&amp; oper\u00e1tor[](int i_index);</code> : </li> </ul> EN <ul> <li><code>void setState(int state)</code> : Set progress </li> <li><code>int state()</code> : Returns current state</li> <li><code>void setColor(Rgb color)</code> : Set the color of status bar</li> <li><code>Rgb color()</code> : Returns current color of status bar</li> <li><code>void show(int intensity = 255)</code> : Show current frame/state</li> <li><code>void clear()</code> : Clear the display </li> <li><code>Rgb&amp; at(int x)</code> : Return pixel at given position</li> </ul>"},{"location":"logic/code/statusBar/#priklad-pouziti","title":"P\u0159\u00edklad pou\u017eit\u00ed","text":"<pre><code>#include \"Logic.hpp\"\n#include &lt;iostream&gt;\n\nvoid logicMain() {\nwhile (true) {\nstatusBar.setColor(Rgb(255, 0, 0));\nstatusBar.setState(4);\n\nstatusBar.show(30);\ndelay(3000);\nstatusBar.clear();\n\nstatusBar.setColor(Rgb(0, 255, 0));\nstatusBar.setState(2);\n\nstatusBar.show(30);\ndelay(3000);\nstatusBar.clear();\n\nstatusBar.at(4) = Rgb(0, 0, 255);\n\nstatusBar.show(30);\ndelay(3000);\nstatusBar.clear();\n\nstatusBar.at(0) = Rgb(255, 0, 0);\nstatusBar.at(1) = Rgb(0, 255, 0);\nstatusBar.at(2) = Rgb(0, 0, 255);\n\nstatusBar.show(30);\ndelay(3000);\nstatusBar.clear();\n}\n}\n</code></pre>"},{"location":"logic/code/utils/","title":"U\u017eite\u010dn\u00e9 funkce","text":""},{"location":"logic/code/utils/#casove-funkce","title":"\u010casov\u00e9 funkce","text":"CZ <ul> <li><code>void delay(uint32_t ms)</code> : \u010cek\u00e1 po specifikovan\u00fd po\u010det milisekund</li> <li><code>void cekejVteriny(float vteriny)</code> : \u010cek\u00e1 po specifikovan\u00fd po\u010det vte\u0159in</li> <li><code>float vteriny()</code> : Vr\u00e1t\u00ed po\u010det vte\u0159in od za\u010d\u00e1tku programu</li> <li><code>uint32_t millis()</code> : Vr\u00e1t\u00ed po\u010det milisekund od za\u010d\u00e1tku programu</li> </ul> EN <ul> <li> <p><code>void delay(uint32_t ms)</code> : Wait for specified amount of milliseconds</p> </li> <li> <p><code>void waitSeconds(float seconds)</code> : Wait for specified amount of seconds</p> </li> <li><code>uint32_t millis()</code> : Returns time since boot in milliseconds</li> <li><code>float seconds()</code> : Returns time since boot in seconds</li> </ul>"},{"location":"logic/code/utils/#nahodna-cisla","title":"N\u00e1hodn\u00e1 \u010d\u00edsla","text":"CZ <ul> <li><code>long nahodne(long maximum)</code> : Vr\u00e1t\u00ed n\u00e1hodn\u00e9 \u010d\u00edslo od 0 do maximum</li> <li><code>long nahodne(long minimum, long maximum)</code> : Vr\u00e1t\u00ed n\u00e1hodn\u00e9 \u010d\u00edslo od minima do maximum </li> </ul> EN <ul> <li><code>long random(long max)</code> : Get random number from 0 to max</li> <li><code>long random(long min, long max)</code> : Get random number from min to max</li> </ul>"},{"location":"logic/code/utils/#automaticke-formatovani","title":"Automatick\u00e9 form\u00e1tov\u00e1n\u00ed","text":"<p>Na Windows Shift+Alt+F</p> <p>Na Linuxu Ctrl+Shift+I</p>"},{"location":"roboSvit/","title":"O co jde?","text":"<p>RoboSvit je mal\u00e9 sv\u011bt\u00fdlko nap\u00e1jen\u00e9 na hodinkovou baterku. Skl\u00e1d\u00e1 se ze sedmi LEDek a jednoho rezistoru. Pr\u016fm\u011br kole\u010dka \u010din\u00ed 45 mm a je vy\u0159ezan\u00e9 na laseru z 3 mm p\u0159ekli\u017eky. Na p\u0159edn\u00ed stran\u011b sv\u011bt\u00fdlka je vygrav\u00edrovan\u00e9 logo Robot\u00e1rny. Dv\u011b d\u00edrky na horn\u00ed stran\u011b jsou p\u0159ipraven\u00e9 na prot\u00e1hnut\u00ed prov\u00e1zku, aby bylo mo\u017en\u00e9 jej nosit pov\u011b\u0161en\u00fd na krku. Odb\u011br cel\u00e9ho sv\u011bt\u00fdlka \u010din\u00ed 2.3 mA a pr\u016fm\u011brn\u00e1 doba sv\u00edcen\u00ed je 85 hodin.</p> <p>Baterie CR2032 - Nap\u011bt\u00ed: 3 V - Kapacita: 200 mAh</p> <p>LED - Nap\u011bt\u00ed: 2.0 V - Proud: 20 mA</p> <p>Rezistor - Odpor: 100 \u03a9 - P\u0159\u00edkon: 0.6 W - Tolerance: 1 % - \u0158ada: E24</p> <p>Vytvo\u0159il Jakub Andr\u00fdsek.</p>"},{"location":"roboSvit/manual/","title":"Manu\u00e1l","text":""},{"location":"roboSvit/manual/#potrebny-material","title":"Pot\u0159ebn\u00fd materi\u00e1l","text":"<ul> <li>D\u0159ev\u011bn\u00fd d\u00edlek</li> <li>7 LED</li> <li>1 rezistor</li> <li>Dr\u017e\u00e1k baterie</li> <li>Baterie CR2032</li> </ul>"},{"location":"roboSvit/manual/#navod-na-slozeni","title":"N\u00e1vod na slo\u017een\u00ed","text":"<p> 1. P\u0159iprav\u00edme si pot\u0159ebn\u00fd materi\u00e1l</p> <p> 2. Vlo\u017e\u00edme 2 LEDky podle zn\u00e1zorn\u011bn\u00ed na obr\u00e1zku</p> <p> 3. LEDku dotla\u010d\u00edme k p\u0159ekli\u017ece</p> <p> 4. Ohneme vn\u011bj\u0161\u00ed no\u017ei\u010dku LEDky podle \u0161ipky</p> <p> 5. Vlo\u017e\u00edme a ohneme dal\u0161\u00ed no\u017ei\u010dku LEDky</p> <p> 6. Proces opakujeme celkem sedmkr\u00e1t</p> <p> 7. Vn\u011bj\u0161\u00ed kru\u017enici zap\u00e1j\u00edme dohromady</p> <p> 8. Ohneme vnit\u0159n\u00ed no\u017ei\u010dku LEDky podle \u0161ipky</p> <p> 9. Pokra\u010dujeme v oh\u00fdb\u00e1n\u00ed LEDek</p> <p> 10. Postupn\u011b zohneme v\u0161echny no\u017ei\u010dky LEDek</p> <p> 11. Zap\u00e1j\u00edme vnit\u0159n\u00ed kru\u017enici</p> <p> 12. Na dr\u017e\u00e1k naneseme kapku lepidla</p> <p> 13. Dr\u017e\u00e1k p\u0159itiskneme pod dr\u00e1tky (pozor polarita!)</p> <p> 14. P\u0159ip\u00e1j\u00edme dr\u017e\u00e1k k LEDk\u00e1m</p> <p> 15. Zakr\u00e1t\u00edme no\u017ei\u010dku rezistoru podle \u0161ipky</p> <p> 16. P\u0159ip\u00e1j\u00edme rezistor k dr\u017e\u00e1ku bateri\u00ed</p> <p> 17. Zakr\u00e1t\u00edme no\u017ei\u010dku rezistoru podle \u0161ipky</p> <p> 18. P\u0159ip\u00e1j\u00edme rezistor ke vn\u011bj\u0161\u00ed kru\u017enici</p> <p> 18. Vlo\u017e\u00edme baterku</p> <p> 20. Dokon\u010den\u00fd RoboSvit</p> <p>Vytvo\u0159il Jakub Andr\u00fdsek.</p>"},{"location":"solderingChallenge/","title":"O co jde?","text":"<p>P\u00e1jec\u00ed v\u00fdzva obsahuje jeden relativn\u011b jednoduch\u00fd obvod zalo\u017een\u00fd na popul\u00e1rn\u00edm integrovan\u00e9m obvodu 555. Pokud se ti poda\u0159\u00ed spr\u00e1vn\u011b zap\u00e1jet v\u0161echny sou\u010d\u00e1stky, tak po zapojen\u00ed do USB portu za\u010dne LED blikat s frekvenc\u00ed cca 2 Hz.</p> <p></p>"},{"location":"solderingChallenge/manual/","title":"Manu\u00e1l","text":""},{"location":"solderingChallenge/manual/#jak-postupovat","title":"Jak postupovat?","text":"<ul> <li>v\u017edy p\u00e1jej pouze jednu \u00farove\u0148 najednou!</li> <li>jeliko\u017e mal\u00e9 sou\u010d\u00e1stky na sob\u011b nemaj\u00ed popisky, cho\u010f si pro sou\u010d\u00e1stky po jedn\u00e9.   V\u017edy si dones jednu sou\u010d\u00e1stku, tu zap\u00e1jej a a\u017e pak si b\u011b\u017e pro dal\u0161\u00ed.</li> <li>za\u010dni p\u0159ip\u00e1jen\u00edm integrovan\u00e9ho obvodu - na n\u011bj pot\u0159ebuje\u0161 nejv\u00edce prostoru. U   integrovan\u00e9ho obvodu si pohl\u00eddej jeho orientaci. Pokud si nejsi jist\u00fd, zeptej   se lektora.</li> <li>pak m\u016f\u017ee\u0161 zap\u00e1jet ostatn\u00ed sou\u010d\u00e1stky. U kondenz\u00e1tor\u016f a rezistor\u016f nez\u00e1le\u017e\u00ed na   orientaci. U LED diody ano - lektor ti uk\u00e1\u017ee, jak m\u00e1 b\u00fdt spr\u00e1vn\u011b oto\u010dena.</li> <li>Jakmile m\u00e1\u0161 zap\u00e1jeno, nalep zespodu USB konektoru podlo\u017eku (op\u011bt ti ji vyd\u00e1   lektor) a m\u016f\u017ee obvod vyzkou\u0161et!</li> </ul>"},{"location":"solderingChallenge/manual/#co-kam-patri","title":"Co kam pat\u0159\u00ed?","text":""},{"location":"solderingChallenge/manual/#uroven-1","title":"\u00darove\u0148 1","text":"<p>Pozor</p> <p>Pozor, u kondenz\u00e1toru 4.7u z\u00e1le\u017e\u00ed na polarit\u011b. Popisek kondenz\u00e1toru mus\u00ed sm\u011b\u0159ovat ven z desky. Zeptej se lektora, pokud si nejsi jist\u00fd.</p>"},{"location":"solderingChallenge/manual/#uroven-2","title":"\u00darove\u0148 2","text":""},{"location":"solderingChallenge/manual/#uroven-3","title":"\u00darove\u0148 3","text":""},{"location":"solderingChallenge/manual/#uroven-4","title":"\u00darove\u0148 4","text":""},{"location":"solderingChallenge/manual/#uroven-5","title":"\u00darove\u0148 5","text":""},{"location":"solderingChallenge/manual/#jak-to-funguje","title":"Jak to funguje?","text":"<p>Pokud t\u011b zaj\u00edm\u00e1, jak funguje obvod, kter\u00fd jsi pr\u00e1v\u011b zap\u00e1jel, pod\u00edvej se nap\u0159. na tento web. Tam se do\u010dte\u0161, jak funguje integrovan\u00fd obvod 555. V na\u0161\u00ed p\u00e1jec\u00ed v\u00fdzv\u011b pou\u017e\u00edv\u00e1me takzvan\u00e9 astabiln\u00ed zapojen\u00ed neboli multivibr\u00e1tor, kter\u00fd je na v\u00fd\u0161e zm\u00edn\u011bn\u00e9 str\u00e1nce vysv\u011btlen.</p>"},{"location":"team/","title":"Index","text":"Robotika Brno (Robotics Brno) V\u00edce o na\u0161em t\u00fdmu  Ji\u0159\u00ed V\u00e1cha  <p>Jirka je hlavn\u00ed vedouc\u00ed Robot\u00e1rny.</p> <p> vacha@helceletka.cz vachajirka </p>  Honza Mr\u00e1zek  <p> email@honzamrazek.cz in/jan-mr\u00e1zek-ba74a364 yaqwsx honzamrazek.cz </p>  Vojt\u011bch Bo\u010dek  <p>Hlavn\u011b ho nenechte sahat na elektroniku, Vojta je toti\u017e program\u00e1tor a interakce s fyzick\u00fdmi v\u011bcmi nedopad\u00e1 dob\u0159e. Na Robot\u00e1rnu se dostal na st\u0159edn\u00ed a roboty si okam\u017eit\u011b zamiloval. Za Robot\u00e1rnu se \u00fasp\u011b\u0161n\u011b z\u00fa\u010dastnil n\u011bkolika sout\u011b\u017e\u00ed a vypracoval dv\u011b pr\u00e1ce SO\u010c. Te\u010f u\u017e n\u011bkolik let pracuje jako v\u00fdvoj\u00e1\u0159 v oblasti kyberbezpe\u010dnosti. Ve voln\u00e9m \u010dase fot\u00ed, krot\u00ed ko\u010dky a proch\u00e1z\u00ed se po hor\u00e1ch.</p> <p> vbocek@gmail.com in/vojtech-bocek Tasssadar tasssadar.github.com </p>  Renata Zemanov\u00e1  <p>Pro Ren\u010du je technika jedno velk\u00e9 kouzlo. I proto se j\u00ed v\u011bnuje a sna\u017e\u00ed se j\u00ed p\u0159ij\u00edt co nejv\u00edce na kloub. Bav\u00ed ji p\u00e1jen\u00ed i v\u011bt\u0161ina rukod\u011bln\u00fdch prac\u00ed. R\u00e1da sv\u00e9 v\u011bdomosti p\u0159ed\u00e1v\u00e1 d\u00e1l, bav\u00ed ji p\u0159em\u00fd\u0161let a nesn\u00e1\u0161\u00ed stereotypy. Je velmi spole\u010densk\u00e1 a p\u0159\u00e1telsk\u00e1. Boj\u00ed se v\u00fd\u0161ek a p\u0159esto miluje hory a rozhledny a fascinuj\u00ed ji kr\u00e1sn\u00e9 v\u00fdhledy do p\u0159\u00edrody. Hraje tak\u00e9 na kytaru a zp\u00edv\u00e1 ve sboru. R\u00e1da by se n\u011bkdy pod\u00edvala na Island, do Norska nebo do Kanady. Na na\u0161em t\u00e1bo\u0159e je na pozici hlavn\u00ed vedouc\u00ed.</p> <p> renata7zemanova </p>  Jakub Andr\u00fdsek  <p>Kuba je \u010dlov\u011bk pro v\u0161echno, r\u00e1d pom\u016f\u017ee v\u0161ude tam, kde je t\u0159eba. Neodrad\u00ed ho ani nestandardn\u00ed situace a jde si v\u017edy za sv\u00fdm c\u00edlem. Studoval informatiku na gymn\u00e1ziu V\u00edde\u0148sk\u00e1 a nyn\u00ed pokra\u010duje na FI MUNI v Brn\u011b. Nej\u010dast\u011bji ho najdete viset na sk\u00e1le, nebo sed\u011bt u po\u010d\u00edta\u010de, kde vym\u00fd\u0161l\u00ed n\u011bjak\u00e9 nov\u00e9 projekty. U n\u00e1s se v\u011bnuje hlavn\u011b programov\u00e1n\u00ed a tak\u00e9 3D modelov\u00e1n\u00ed v krou\u017eku, kter\u00fd u\u017e n\u011bkolik let vede.</p> <p> email@kubaandrysek.cz in/jakub-andrysek JakubAndrysek kubaandrysek.cz </p>  Tom\u00e1\u0161 Vavrinec  <p>Tom je \u010dlov\u011bk prim\u00e1rn\u011b pro elektroniku, p\u0159esto nepohrdne ani dobrou t\u00e1borovou hrou nebo jinou kuli\u0161arnou. Kdy\u017e se pro n\u011bco nadchne nep\u0159estane dokud neuzn\u00e1 d\u00edlo za hotov\u00e9. Aktu\u00e1ln\u011b je studentem \u00fastavu mikroelektrotechniky na fakult\u011b FEKT univerzity VUT a z\u00e1rove\u0148 pracuje na v\u00fdvoji m\u011b\u0159\u00edc\u00edch za\u0159\u00edzen\u00ed. B\u00fdv\u00e1 k vid\u011bn\u00ed na nejr\u016fzn\u011bj\u0161\u00edch hor\u00e1ch i za pol\u00e1rn\u00edm kruhem, p\u0159esto \u017ee nej\u010dast\u011bji ho najdete v okol\u00ed technologick\u00e9ho parku VUT, nebo u po\u010d\u00edta\u010de \u010di osciloskopu, jak se sna\u017e\u00ed zprovoznit hra\u010dky nejmenovan\u00e9mu program\u00e1torovi. U n\u00e1s se zab\u00fdv\u00e1 n\u00e1vrhem elektroniky a mechaniky v\u0161eho druhu a spolu s Kubou Andr\u00fdskem vede krou\u017eek 3D modelov\u00e1n\u00ed a 3D tisku.</p> <p> TVavrinec </p>  Tom\u00e1\u0161 Rohl\u00ednek  <p> in/tom\u00e1\u0161-rohl\u00ednek-13233a1a8 haberturdeur </p>  Jarek Malec  <p> in/jaroslavmalec cednik </p>  Jakub Streit  <p> cednik </p>  Honza \u0160krabal  <p>Honza je \u010dlov\u011bk do pohody. R\u00e1d v\u0161em pom\u016f\u017ee a p\u0159ed\u00e1 sv\u00e9 zku\u0161enosti. Aktu\u00e1ln\u011b studuje na FIT (Fakult\u011b informa\u010dn\u00edch technologi\u00ed) univerzity VUT v Brn\u011b. Kdy\u017e se zrovna nev\u011bnuje \u0161kole, tak d\u011bl\u00e1 na nejr\u016fzn\u011bj\u0161\u00edch projektech. O robotiku a programov\u00e1n\u00ed se zaj\u00edm\u00e1 ji\u017e od 6. t\u0159\u00eddy a nyn\u00ed vede n\u011bkolik\u00e1t\u00fdm rokem krou\u017eek Lego Mindstorms. Mezi jeho hlavn\u00ed z\u00e1jmy pat\u0159\u00ed elektronika a mechanika, nejv\u00edce ho bav\u00ed p\u00e1jet. Takt\u00e9\u017e jej m\u016f\u017eete potkat na robotick\u00e9m t\u00e1bo\u0159e, na kter\u00e9m ka\u017edoro\u010dn\u011b pom\u00e1h\u00e1.</p> <p> Robot7769 </p>  Petr Kubica  <p> cubicap cubicap.eu </p>  MiroslavBurda  <p> MiroslavBurda </p>  Martin Pt\u00e1\u010dek  <p> MarPta </p>  Bed\u0159ich Said  <p> in/bedrich-said bsaid </p>  Martin Kousal  <p> mkousal </p>  Jarek P\u00e1ral  <p> in/jaroslav-paral JarekParal JarekParal/JarekParal </p>  Petr Stoura\u010d  <p> in/petrstourac </p>"},{"location":"template/","title":"A Gadget Template","text":"<p>Put a rendering/photos of the gadget here.</p> <p>Then provide a short description - just that the others know what is this directory about.</p> <p>Do not forget to write a manual in the doc directory!</p>"},{"location":"template/#notes-for-authors","title":"Notes for authors","text":"<ul> <li>place boards in the hardware directory</li> <li>if there is an essential firmware, put it in the firmware directory</li> <li>write manual in the</li> </ul>"},{"location":"template/manual-cs/","title":"Gadget Manual","text":"<p>Tady napi\u0161 manu\u00e1l pro hra\u010dku v \u010de\u0161tin\u011b</p>"},{"location":"template/manual-en/","title":"Gadget Manual","text":"<p>Write the gadget manual in english, if you want.</p>"},{"location":"usbPad/","title":"A Gadget Template","text":"<p>Put a rendering/photos of the gadget here.</p> <p>Then provide a short description - just that the others know what is this directory about.</p> <p>Do not forget to write a manual in the doc directory!</p>"},{"location":"usbPad/#notes-for-authors","title":"Notes for authors","text":"<ul> <li>place boards in the hardware directory</li> <li>if there is an essential firmware, put it in the firmware directory</li> <li>write manual in the</li> </ul>"},{"location":"usbPad/manual-cs/","title":"Gadget Manual","text":"<p>Tady napi\u0161 manu\u00e1l pro hra\u010dku v \u010de\u0161tin\u011b</p>"},{"location":"usbPad/manual-en/","title":"Gadget Manual","text":"<p>Write the gadget manual in english, if you want.</p>"}]}